{
  "swagger": "2.0",
  "info": {
    "title": "Talebound API",
    "version": "1.0",
    "contact": {
      "name": "Medo",
      "url": "https://github.com/the-medo/talebound-backend",
      "email": "martinmederly@gmail.com"
    }
  },
  "tags": [
    {
      "name": "Auth"
    },
    {
      "name": "Characters"
    },
    {
      "name": "Entities"
    },
    {
      "name": "Evaluations"
    },
    {
      "name": "Fetcher"
    },
    {
      "name": "Images"
    },
    {
      "name": "Locations"
    },
    {
      "name": "Maps"
    },
    {
      "name": "Menus"
    },
    {
      "name": "Modules"
    },
    {
      "name": "Posts"
    },
    {
      "name": "Quests"
    },
    {
      "name": "Systems"
    },
    {
      "name": "Tags"
    },
    {
      "name": "Users"
    },
    {
      "name": "Worlds"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/auth": {
      "post": {
        "summary": "Verify email",
        "description": "auth user email",
        "operationId": "Auth_VerifyEmail",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbVerifyEmailResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/pbVerifyEmailRequest"
            }
          }
        ],
        "tags": [
          "Auth"
        ]
      }
    },
    "/auth/login": {
      "post": {
        "summary": "Login user",
        "description": "login user - get user object and set HttpOnly cookies",
        "operationId": "Auth_LoginUser",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbLoginUserResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/pbLoginUserRequest"
            }
          }
        ],
        "tags": [
          "Auth"
        ]
      }
    },
    "/auth/logout": {
      "post": {
        "summary": "Logout user",
        "description": "logout user - it clears HttpOnly cookies - no request data required",
        "operationId": "Auth_LogoutUser",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {}
            }
          }
        ],
        "tags": [
          "Auth"
        ]
      }
    },
    "/auth/reset/auth-code": {
      "post": {
        "summary": "Confirm password reset",
        "description": "in case a user forgot their password, they can confirm the password reset using this endpoint",
        "operationId": "Auth_ResetPasswordVerifyCode",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbResetPasswordVerifyCodeResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/pbResetPasswordVerifyCodeRequest"
            }
          }
        ],
        "tags": [
          "Auth"
        ]
      }
    },
    "/auth/reset/auth-code-validity": {
      "get": {
        "summary": "Validate reset password secret code",
        "description": "validate reset password secret code",
        "operationId": "Auth_ResetPasswordVerifyCodeValidity",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbResetPasswordVerifyCodeValidityResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "secretCode",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Auth"
        ]
      }
    },
    "/auth/reset/send-code": {
      "post": {
        "summary": "Request password reset",
        "description": "in case a user forgot their password, they can request a password reset using this endpoint",
        "operationId": "Auth_ResetPasswordSendCode",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbResetPasswordSendCodeResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/pbResetPasswordSendCodeRequest"
            }
          }
        ],
        "tags": [
          "Auth"
        ]
      }
    },
    "/characters": {
      "get": {
        "summary": "Get characters ",
        "description": "gets list of characters",
        "operationId": "Characters_GetCharacters",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbGetCharactersResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "public",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "tags",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "worldId",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "systemId",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "orderBy",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "Characters"
        ]
      },
      "post": {
        "summary": "Create character",
        "description": "creates completely new character",
        "operationId": "Characters_CreateCharacter",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbCreateCharacterResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/pbCreateCharacterRequest"
            }
          }
        ],
        "tags": [
          "Characters"
        ]
      }
    },
    "/characters/{characterId}": {
      "get": {
        "summary": "Get character by ID ",
        "description": "gets character by ID",
        "operationId": "Characters_GetCharacterById",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbCharacter"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "characterId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "Characters"
        ]
      },
      "patch": {
        "summary": "Update character",
        "description": "updates character properties (NO images or stats!)",
        "operationId": "Characters_UpdateCharacter",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbCharacter"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "characterId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "shortDescription": {
                  "type": "string"
                },
                "public": {
                  "type": "boolean"
                },
                "worldId": {
                  "type": "integer",
                  "format": "int32"
                },
                "systemId": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        ],
        "tags": [
          "Characters"
        ]
      }
    },
    "/characters/{characterId}/images": {
      "post": {
        "summary": "Upload image for character",
        "description": "uploads and sets new image for given character",
        "operationId": "Characters_UploadCharacterImage",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbImage"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "characterId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "string",
                  "format": "byte"
                },
                "imageTypeId": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        ],
        "tags": [
          "Characters"
        ]
      }
    },
    "/characters/{characterId}/quests": {
      "get": {
        "summary": "Get character quests",
        "description": "gets list of character quests",
        "operationId": "Characters_GetCharacterQuests",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbGetQuestCharactersResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "characterId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "Characters"
        ]
      }
    },
    "/entities/groups/create": {
      "post": {
        "summary": "Create entity group",
        "description": "creates entity group",
        "operationId": "Entities_CreateEntityGroup",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbCreateEntityGroupResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/pbCreateEntityGroupRequest"
            }
          }
        ],
        "tags": [
          "Entities"
        ]
      }
    },
    "/entities/groups/{entityGroupId}": {
      "patch": {
        "summary": "Update entity group",
        "description": "updates entity group properties",
        "operationId": "Entities_UpdateEntityGroup",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbEntityGroup"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "entityGroupId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "style": {
                  "$ref": "#/definitions/pbEntityGroupStyle"
                },
                "direction": {
                  "$ref": "#/definitions/pbEntityGroupDirection"
                }
              }
            }
          }
        ],
        "tags": [
          "Entities"
        ]
      }
    },
    "/entities/groups/{entityGroupId}/content": {
      "post": {
        "summary": "Create entity group content",
        "description": "creates content for an entity group",
        "operationId": "Entities_CreateEntityGroupContent",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbEntityGroupContent"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "entityGroupId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "contentEntityId": {
                  "type": "integer",
                  "format": "int32"
                },
                "contentEntityGroupId": {
                  "type": "integer",
                  "format": "int32"
                },
                "position": {
                  "type": "integer",
                  "format": "int32"
                },
                "entityType": {
                  "$ref": "#/definitions/pbEntityType"
                },
                "entityIdOfType": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        ],
        "tags": [
          "Entities"
        ]
      }
    },
    "/entities/groups/{entityGroupId}/content/{contentId}": {
      "delete": {
        "summary": "Delete entity group content",
        "description": "deletes content from an entity group",
        "operationId": "Entities_DeleteEntityGroupContent",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "entityGroupId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "contentId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "Entities"
        ]
      },
      "patch": {
        "summary": "Update entity group content",
        "description": "updates content of an entity group",
        "operationId": "Entities_UpdateEntityGroupContent",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbEntityGroupContent"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "entityGroupId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "contentId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "newEntityGroupId": {
                  "type": "integer",
                  "format": "int32"
                },
                "position": {
                  "type": "integer",
                  "format": "int32"
                },
                "contentEntityId": {
                  "type": "integer",
                  "format": "int32"
                },
                "contentEntityGroupId": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        ],
        "tags": [
          "Entities"
        ]
      }
    },
    "/entities/groups/{entityGroupId}/delete_type/{deleteType}": {
      "delete": {
        "summary": "Delete entity group",
        "description": "deletes an entity group",
        "operationId": "Entities_DeleteEntityGroup",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "entityGroupId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "deleteType",
            "in": "path",
            "required": true,
            "type": "string",
            "enum": [
              "DELETE_EGC_ACTION_UNKNOWN",
              "DELETE_EGC_ACTION_DELETE_CHILDREN",
              "DELETE_EGC_ACTION_MOVE_CHILDREN"
            ]
          }
        ],
        "tags": [
          "Entities"
        ]
      }
    },
    "/entities/{entityId}": {
      "get": {
        "summary": "Get entity by id",
        "description": "gets entity by id",
        "operationId": "Entities_GetEntityById",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbViewEntity"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "entityId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "Entities"
        ]
      }
    },
    "/evaluations/id/{id}": {
      "get": {
        "summary": "Get evaluation by id",
        "description": "get evaluation by id",
        "operationId": "Evaluations_GetEvaluationById",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbGetEvaluationByIdResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "Evaluations"
        ]
      }
    },
    "/evaluations/type/{type}": {
      "get": {
        "summary": "Get evaluations by type",
        "description": "get evaluations by type",
        "operationId": "Evaluations_GetEvaluationsByType",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbGetEvaluationsByTypeResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "type",
            "in": "path",
            "required": true,
            "type": "string",
            "enum": [
              "self",
              "dm"
            ]
          }
        ],
        "tags": [
          "Evaluations"
        ]
      }
    },
    "/fetcher": {
      "post": {
        "summary": "Run fetcher - get modules and entities by ID",
        "description": "Run fetcher - get modules and entities by their ID",
        "operationId": "Fetcher_RunFetcher",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbRunFetcherResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/pbRunFetcherRequest"
            }
          }
        ],
        "tags": [
          "Fetcher"
        ]
      }
    },
    "/images": {
      "get": {
        "summary": "Get images",
        "description": "get images - paginated, filterable by user and image type",
        "operationId": "Images_GetImages",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbGetImagesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "moduleId",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "userId",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "tags",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "orderBy",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "width",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "height",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "Images"
        ]
      },
      "post": {
        "summary": "Upload image",
        "description": "uploads an image file",
        "operationId": "Images_UploadDefaultImage",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbImage"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/pbUploadImageRequest"
            }
          }
        ],
        "tags": [
          "Images"
        ]
      }
    },
    "/images/{imageId}": {
      "get": {
        "summary": "Get image by id",
        "description": "get image by id",
        "operationId": "Images_GetImageById",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbImage"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "imageId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "Images"
        ]
      }
    },
    "/locations": {
      "get": {
        "summary": "Get locations",
        "description": "returns locations based on modules (world or quest)",
        "operationId": "Locations_GetLocations",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbGetLocationsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "moduleId",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "tags",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "orderBy",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "Locations"
        ]
      },
      "delete": {
        "summary": "Delete multiple locations",
        "description": "deletes multiple locations from the world or quest",
        "operationId": "Locations_DeleteBulkLocation",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "locationIds",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "collectionFormat": "multi"
          }
        ],
        "tags": [
          "Locations"
        ]
      },
      "post": {
        "summary": "Create location",
        "description": "creates a new location in the world or a quest",
        "operationId": "Locations_CreateLocation",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbLocation"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/pbCreateLocationRequest"
            }
          }
        ],
        "tags": [
          "Locations"
        ]
      }
    },
    "/locations/{locationId}": {
      "get": {
        "summary": "Get location by id",
        "description": "get location by id",
        "operationId": "Locations_GetLocationById",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbLocation"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "locationId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "Locations"
        ]
      },
      "delete": {
        "summary": "Delete location",
        "description": "deletes location from the world or quest",
        "operationId": "Locations_DeleteLocation",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "locationId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "Locations"
        ]
      },
      "patch": {
        "summary": "Update location",
        "description": "updates location properties",
        "operationId": "Locations_UpdateLocation",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbLocation"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "locationId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "postId": {
                  "type": "integer",
                  "format": "int32"
                },
                "thumbnailImageId": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        ],
        "tags": [
          "Locations"
        ]
      }
    },
    "/locations/{locationId}/posts": {
      "post": {
        "summary": "Create post for location",
        "description": "creates a new post and assigns it to location in the world or a quest",
        "operationId": "Locations_CreateLocationPost",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbLocation"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "locationId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "Locations"
        ]
      }
    },
    "/maps": {
      "get": {
        "summary": "Get maps",
        "description": "returns maps based on modules (world or quest)",
        "operationId": "Maps_GetMaps",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbGetMapsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "moduleId",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "tags",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "orderBy",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "Maps"
        ]
      },
      "post": {
        "summary": "Create map",
        "description": "creates a new map for world or quest",
        "operationId": "Maps_CreateMap",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbCreateMapResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/pbCreateMapRequest"
            }
          }
        ],
        "tags": [
          "Maps"
        ]
      }
    },
    "/maps/modules/{moduleId}/pin_type_groups": {
      "post": {
        "summary": "Create map pin type group",
        "description": "creates a new map pin type group for the module",
        "operationId": "Maps_CreateMapPinTypeGroup",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbMapPinTypeGroup"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "moduleId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "tags": [
          "Maps"
        ]
      }
    },
    "/maps/modules/{moduleId}/pin_type_groups/{mapPinTypeGroupId}": {
      "delete": {
        "summary": "Delete map pin type group",
        "description": "deletes a map pin type group from the module",
        "operationId": "Maps_DeleteMapPinTypeGroup",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "moduleId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "mapPinTypeGroupId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "Maps"
        ]
      },
      "patch": {
        "summary": "Update map pin type group",
        "description": "updates map pin type group properties",
        "operationId": "Maps_UpdateMapPinTypeGroup",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbMapPinTypeGroup"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "moduleId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "mapPinTypeGroupId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "tags": [
          "Maps"
        ]
      }
    },
    "/maps/modules/{moduleId}/pin_types": {
      "get": {
        "summary": "Get module map pin types",
        "description": "returns pin types of the module",
        "operationId": "Maps_GetModuleMapPinTypes",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbGetModuleMapPinTypesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "moduleId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "Maps"
        ]
      },
      "post": {
        "summary": "Create map pin type",
        "description": "creates a new pin type for the map",
        "operationId": "Maps_CreateMapPinType",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbMapPinType"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "moduleId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "mapPinTypeGroupId": {
                  "type": "integer",
                  "format": "int32"
                },
                "shape": {
                  "$ref": "#/definitions/pbPinShape"
                },
                "backgroundColor": {
                  "type": "string"
                },
                "borderColor": {
                  "type": "string"
                },
                "iconColor": {
                  "type": "string"
                },
                "icon": {
                  "type": "string"
                },
                "iconSize": {
                  "type": "integer",
                  "format": "int32"
                },
                "width": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        ],
        "tags": [
          "Maps"
        ]
      }
    },
    "/maps/modules/{moduleId}/pin_types/{pinTypeId}": {
      "patch": {
        "summary": "Update map pin type",
        "description": "updates pin type properties",
        "operationId": "Maps_UpdateMapPinType",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbUpdateMapPinTypeResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "moduleId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pinTypeId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "shape": {
                  "$ref": "#/definitions/pbPinShape"
                },
                "backgroundColor": {
                  "type": "string"
                },
                "borderColor": {
                  "type": "string"
                },
                "iconColor": {
                  "type": "string"
                },
                "icon": {
                  "type": "string"
                },
                "iconSize": {
                  "type": "integer",
                  "format": "int32"
                },
                "width": {
                  "type": "integer",
                  "format": "int32"
                },
                "isDefault": {
                  "type": "boolean"
                }
              }
            }
          }
        ],
        "tags": [
          "Maps"
        ]
      }
    },
    "/maps/{mapId}": {
      "get": {
        "summary": "Get map by id",
        "description": "get map by id",
        "operationId": "Maps_GetMapById",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbMap"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "mapId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "Maps"
        ]
      },
      "delete": {
        "summary": "Delete map",
        "description": "deletes a map from the world or quest",
        "operationId": "Maps_DeleteMap",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "mapId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "Maps"
        ]
      },
      "patch": {
        "summary": "Update map",
        "description": "updates map properties",
        "operationId": "Maps_UpdateMap",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbMap"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "mapId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "title": {
                  "type": "string"
                },
                "type": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "thumbnailImageId": {
                  "type": "integer",
                  "format": "int32"
                },
                "isPrivate": {
                  "type": "boolean"
                }
              }
            }
          }
        ],
        "tags": [
          "Maps"
        ]
      }
    },
    "/maps/{mapId}/layers": {
      "get": {
        "summary": "Get map layers",
        "description": "returns layers of the map",
        "operationId": "Maps_GetMapLayers",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbGetMapLayersResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "mapId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "Maps"
        ]
      },
      "post": {
        "summary": "Create map layer",
        "description": "creates a new layer for the map",
        "operationId": "Maps_CreateMapLayer",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbViewMapLayer"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "mapId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "imageId": {
                  "type": "integer",
                  "format": "int32"
                },
                "enabled": {
                  "type": "boolean"
                },
                "position": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        ],
        "tags": [
          "Maps"
        ]
      }
    },
    "/maps/{mapId}/layers/{layerId}": {
      "delete": {
        "summary": "Delete map layer",
        "description": "deletes a layer from the map",
        "operationId": "Maps_DeleteMapLayer",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "mapId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "layerId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "Maps"
        ]
      },
      "patch": {
        "summary": "Update map layer",
        "description": "updates layer properties",
        "operationId": "Maps_UpdateMapLayer",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbViewMapLayer"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "mapId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "layerId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "imageId": {
                  "type": "integer",
                  "format": "int32"
                },
                "enabled": {
                  "type": "boolean"
                },
                "position": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        ],
        "tags": [
          "Maps"
        ]
      }
    },
    "/maps/{mapId}/pin_types/{pinTypeId}": {
      "delete": {
        "summary": "Delete map pin type",
        "description": "deletes a pin type from the map",
        "operationId": "Maps_DeleteMapPinType",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "mapId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pinTypeId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "Maps"
        ]
      }
    },
    "/maps/{mapId}/pins": {
      "get": {
        "summary": "Get map pins",
        "description": "returns pins of the map",
        "operationId": "Maps_GetMapPins",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbGetMapPinsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "mapId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "Maps"
        ]
      },
      "post": {
        "summary": "Create map pin",
        "description": "creates a new pin for the map",
        "operationId": "Maps_CreateMapPin",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbViewMapPin"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "mapId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "mapPinTypeId": {
                  "type": "integer",
                  "format": "int32"
                },
                "name": {
                  "type": "string"
                },
                "locationId": {
                  "type": "integer",
                  "format": "int32"
                },
                "mapLayerId": {
                  "type": "integer",
                  "format": "int32"
                },
                "x": {
                  "type": "integer",
                  "format": "int32"
                },
                "y": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        ],
        "tags": [
          "Maps"
        ]
      }
    },
    "/maps/{mapId}/pins/{pinId}": {
      "delete": {
        "summary": "Delete map pin",
        "description": "deletes a pin from the map",
        "operationId": "Maps_DeleteMapPin",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "mapId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pinId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "Maps"
        ]
      },
      "patch": {
        "summary": "Update map pin",
        "description": "updates pin properties",
        "operationId": "Maps_UpdateMapPin",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbViewMapPin"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "mapId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pinId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "mapPinTypeId": {
                  "type": "integer",
                  "format": "int32"
                },
                "name": {
                  "type": "string"
                },
                "locationId": {
                  "type": "integer",
                  "format": "int32"
                },
                "mapLayerId": {
                  "type": "integer",
                  "format": "int32"
                },
                "x": {
                  "type": "integer",
                  "format": "int32"
                },
                "y": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        ],
        "tags": [
          "Maps"
        ]
      }
    },
    "/menus/items/content/{menuItemId}": {
      "get": {
        "summary": "Get all entities for menu item",
        "description": "gets list of entities for menu item - posts, maps, locations,...",
        "operationId": "Menus_GetMenuItemContent",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbGetMenuItemContentResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "menuItemId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "Menus"
        ]
      }
    },
    "/menus/{menuId}": {
      "get": {
        "summary": "Get menu by ID ",
        "description": "gets menu by ID",
        "operationId": "Menus_GetMenu",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbViewMenu"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "menuId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "Menus"
        ]
      },
      "patch": {
        "summary": "Update Menu",
        "description": "updates menu (code or image)",
        "operationId": "Menus_UpdateMenu",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbViewMenu"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "menuId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string"
                },
                "headerImgId": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        ],
        "tags": [
          "Menus"
        ]
      }
    },
    "/menus/{menuId}/groups/{menuItemId}": {
      "patch": {
        "summary": "Move menu item group up",
        "description": "move menu item group up",
        "operationId": "Menus_UpdateMenuItemMoveGroupUp",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "menuId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "menuItemId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "Menus"
        ]
      }
    },
    "/menus/{menuId}/items": {
      "get": {
        "summary": "Get menu items",
        "description": "gets list of menu items",
        "operationId": "Menus_GetMenuItems",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbGetMenuItemsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "menuId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "Menus"
        ]
      },
      "post": {
        "summary": "Create menu item",
        "description": "adds new menu item to the menu",
        "operationId": "Menus_CreateMenuItem",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbMenuItem"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "menuId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "position": {
                  "type": "integer",
                  "format": "int32"
                },
                "isMain": {
                  "type": "boolean"
                }
              }
            }
          }
        ],
        "tags": [
          "Menus"
        ]
      }
    },
    "/menus/{menuId}/items/{menuItemId}": {
      "delete": {
        "summary": "Delete menu item",
        "description": "deletes menu item",
        "operationId": "Menus_DeleteMenuItem",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "menuId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "menuItemId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "Menus"
        ]
      },
      "patch": {
        "summary": "Update menu item",
        "description": "updates menu item",
        "operationId": "Menus_UpdateMenuItem",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbMenuItem"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "menuId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "menuItemId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "position": {
                  "type": "integer",
                  "format": "int32"
                },
                "isMain": {
                  "type": "boolean"
                },
                "descriptionPostId": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        ],
        "tags": [
          "Menus"
        ]
      }
    },
    "/modules/get/id": {
      "get": {
        "summary": "Get id of the module",
        "description": "gets id of the module (based on world id, quest id,...)",
        "operationId": "Modules_GetModuleId",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbGetModuleIdResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "worldId",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "questId",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "characterId",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "systemId",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "Modules"
        ]
      }
    },
    "/modules/{moduleId}": {
      "get": {
        "summary": "Get module by id",
        "description": "gets module by id",
        "operationId": "Modules_GetModuleById",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbViewModule"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "moduleId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "Modules"
        ]
      },
      "patch": {
        "summary": "Update module",
        "description": "updates module (images and description post id)",
        "operationId": "Modules_UpdateModule",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbViewModule"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "moduleId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "headerImgId": {
                  "type": "integer",
                  "format": "int32"
                },
                "thumbnailImgId": {
                  "type": "integer",
                  "format": "int32"
                },
                "avatarImgId": {
                  "type": "integer",
                  "format": "int32"
                },
                "descriptionPostId": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        ],
        "tags": [
          "Modules"
        ]
      }
    },
    "/modules/{moduleId}/admin": {
      "get": {
        "summary": "Get module admins",
        "description": "returns admins and admin requests for module",
        "operationId": "Modules_GetModuleAdmins",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbGetModuleAdminsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "moduleId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "Modules"
        ]
      },
      "delete": {
        "summary": "Delete module admin",
        "description": "deletes module admin",
        "operationId": "Modules_DeleteModuleAdmin",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "moduleId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "userId",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "Modules"
        ]
      },
      "post": {
        "summary": "Create module admin",
        "description": "adds request to become admin of the module",
        "operationId": "Modules_CreateModuleAdmin",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbModuleAdmin"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "moduleId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "motivationalLetter": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "tags": [
          "Modules"
        ]
      },
      "patch": {
        "summary": "Update module admin",
        "description": "updates module admin request (approve / decline)",
        "operationId": "Modules_UpdateModuleAdmin",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbModuleAdmin"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "moduleId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "userId": {
                  "type": "integer",
                  "format": "int32"
                },
                "superAdmin": {
                  "type": "boolean"
                },
                "approved": {
                  "type": "integer",
                  "format": "int32"
                },
                "motivationalLetter": {
                  "type": "string"
                },
                "allowedEntityTypes": {
                  "$ref": "#/definitions/pbEntityTypeList"
                },
                "allowedMenu": {
                  "type": "boolean"
                }
              }
            }
          }
        ],
        "tags": [
          "Modules"
        ]
      }
    },
    "/posts": {
      "get": {
        "summary": "Get posts",
        "description": "returns posts based on module",
        "operationId": "Posts_GetPosts",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbGetPostsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "moduleId",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "userId",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "tags",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "orderBy",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "orderDirection",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "isDraft",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "isPrivate",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "Posts"
        ]
      },
      "post": {
        "summary": "Create post",
        "description": "create completely new post",
        "operationId": "Posts_CreatePost",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbPost"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/pbCreatePostRequest"
            }
          }
        ],
        "tags": [
          "Posts"
        ]
      }
    },
    "/posts/{postId}": {
      "get": {
        "summary": "Get post by id",
        "description": "get content of post by its ID",
        "operationId": "Posts_GetPostById",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbPost"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "postId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "Posts"
        ]
      },
      "delete": {
        "summary": "Delete post",
        "description": "deletes post",
        "operationId": "Posts_DeletePost",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbDeletePostResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "postId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "Posts"
        ]
      },
      "patch": {
        "summary": "Update post",
        "description": "update title or content of the post",
        "operationId": "Posts_UpdatePost",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbPost"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "postId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "title": {
                  "type": "string"
                },
                "content": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "isDraft": {
                  "type": "boolean"
                },
                "isPrivate": {
                  "type": "boolean"
                },
                "imageThumbnailId": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        ],
        "tags": [
          "Posts"
        ]
      }
    },
    "/posts/{postId}/history": {
      "get": {
        "summary": "Get post history",
        "description": "get list of history changes of post by its ID - without content",
        "operationId": "Posts_GetPostHistory",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbGetPostHistoryResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "postId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "Posts"
        ]
      }
    },
    "/posts/{postId}/history/{postHistoryId}/content": {
      "get": {
        "summary": "Get post history content",
        "description": "get content of single update iteration of post",
        "operationId": "Posts_GetPostHistoryById",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbPostHistory"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "postId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "postHistoryId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "Posts"
        ]
      }
    },
    "/quests": {
      "get": {
        "summary": "Get quests ",
        "description": "gets list of quests",
        "operationId": "Quests_GetQuests",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbGetQuestsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "public",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "tags",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "worldId",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "systemId",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "orderBy",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "Quests"
        ]
      },
      "post": {
        "summary": "Create quest",
        "description": "creates completely new quest",
        "operationId": "Quests_CreateQuest",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbCreateQuestResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/pbCreateQuestRequest"
            }
          }
        ],
        "tags": [
          "Quests"
        ]
      }
    },
    "/quests/{questId}": {
      "get": {
        "summary": "Get quest by ID ",
        "description": "gets quest by ID",
        "operationId": "Quests_GetQuestById",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbQuest"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "questId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "Quests"
        ]
      },
      "patch": {
        "summary": "Update quest",
        "description": "updates quest properties (NO images or stats!)",
        "operationId": "Quests_UpdateQuest",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbQuest"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "questId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "shortDescription": {
                  "type": "string"
                },
                "public": {
                  "type": "boolean"
                },
                "worldId": {
                  "type": "integer",
                  "format": "int32"
                },
                "systemId": {
                  "type": "integer",
                  "format": "int32"
                },
                "status": {
                  "$ref": "#/definitions/pbQuestStatus"
                },
                "canJoin": {
                  "type": "boolean"
                }
              }
            }
          }
        ],
        "tags": [
          "Quests"
        ]
      }
    },
    "/quests/{questId}/characters": {
      "get": {
        "summary": "Get quest characters",
        "description": "gets list of quest characters",
        "operationId": "Quests_GetQuestCharacters",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbGetQuestCharactersResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "questId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "Quests"
        ]
      }
    },
    "/quests/{questId}/characters/{characterId}": {
      "delete": {
        "summary": "Delete quest character",
        "description": "deletes quest character",
        "operationId": "Quests_DeleteQuestCharacter",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "questId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "characterId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "Quests"
        ]
      },
      "post": {
        "summary": "Create quest character",
        "description": "creates quest character",
        "operationId": "Quests_CreateQuestCharacter",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbQuestCharacter"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "questId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "characterId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "motivationalLetter": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "tags": [
          "Quests"
        ]
      },
      "patch": {
        "summary": "Update quest character",
        "description": "updates quest character properties",
        "operationId": "Quests_UpdateQuestCharacter",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbQuestCharacter"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "questId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "characterId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "approved": {
                  "type": "boolean"
                },
                "motivationalLetter": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "tags": [
          "Quests"
        ]
      }
    },
    "/quests/{questId}/images": {
      "post": {
        "summary": "Upload image for quest",
        "description": "uploads and sets new image for given quest",
        "operationId": "Quests_UploadQuestImage",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbImage"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "questId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "string",
                  "format": "byte"
                },
                "imageTypeId": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        ],
        "tags": [
          "Quests"
        ]
      }
    },
    "/systems": {
      "get": {
        "summary": "Get systems ",
        "description": "gets list of systems",
        "operationId": "Systems_GetSystems",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbGetSystemsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "public",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "tags",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "orderBy",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "Systems"
        ]
      },
      "post": {
        "summary": "Create system",
        "description": "creates completely new system",
        "operationId": "Systems_CreateSystem",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbCreateSystemResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/pbCreateSystemRequest"
            }
          }
        ],
        "tags": [
          "Systems"
        ]
      }
    },
    "/systems/{systemId}": {
      "get": {
        "summary": "Get system by ID ",
        "description": "gets system by ID",
        "operationId": "Systems_GetSystemById",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbSystem"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "systemId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "Systems"
        ]
      },
      "patch": {
        "summary": "Update system",
        "description": "updates system properties (NO images or stats!)",
        "operationId": "Systems_UpdateSystem",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbSystem"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "systemId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "shortDescription": {
                  "type": "string"
                },
                "public": {
                  "type": "boolean"
                },
                "basedOn": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "tags": [
          "Systems"
        ]
      }
    },
    "/systems/{systemId}/images": {
      "post": {
        "summary": "Upload image for system",
        "description": "uploads and sets new image for given system",
        "operationId": "Systems_UploadSystemImage",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbImage"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "systemId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "string",
                  "format": "byte"
                },
                "imageTypeId": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        ],
        "tags": [
          "Systems"
        ]
      }
    },
    "/tags/available/entity": {
      "get": {
        "summary": "Get available tags for entities",
        "description": "gets list of tags, that are usable for entities inside of module",
        "operationId": "Tags_GetModuleEntityAvailableTags",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbGetModuleEntityAvailableTagsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "moduleId",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "Tags"
        ]
      },
      "post": {
        "summary": "Create entity-available tag",
        "description": "creates new tag, that can be assigned to entities inside of given module",
        "operationId": "Tags_CreateModuleEntityAvailableTag",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbEntityTagAvailable"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/pbCreateModuleEntityAvailableTagRequest"
            }
          }
        ],
        "tags": [
          "Tags"
        ]
      }
    },
    "/tags/available/entity/{tagId}": {
      "delete": {
        "summary": "Delete entity-available tag",
        "description": "deletes available tag and removes all its assignments",
        "operationId": "Tags_DeleteModuleEntityAvailableTag",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "tagId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "Tags"
        ]
      },
      "patch": {
        "summary": "Update entity-available tag",
        "description": "updates entity-assignable tag",
        "operationId": "Tags_UpdateModuleEntityAvailableTag",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbEntityTagAvailable"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "tagId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "newTag": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "tags": [
          "Tags"
        ]
      }
    },
    "/tags/available/module_type": {
      "get": {
        "summary": "Get available tags for module type",
        "description": "gets list of tags, that are usable for module type",
        "operationId": "Tags_GetModuleTypeAvailableTags",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbGetModuleTypeAvailableTagsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "moduleType",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "MODULE_TYPE_UNKNOWN",
              "MODULE_TYPE_WORLD",
              "MODULE_TYPE_QUEST",
              "MODULE_TYPE_SYSTEM",
              "MODULE_TYPE_CHARACTER"
            ],
            "default": "MODULE_TYPE_UNKNOWN"
          }
        ],
        "tags": [
          "Tags"
        ]
      },
      "post": {
        "summary": "Create module-available tag",
        "description": "creates new tag, that can be assigned to modules of given type",
        "operationId": "Tags_CreateModuleTypeAvailableTag",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbViewTag"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/pbCreateModuleTypeAvailableTagRequest"
            }
          }
        ],
        "tags": [
          "Tags"
        ]
      }
    },
    "/tags/available/module_type/{tagId}": {
      "delete": {
        "summary": "Delete available world tag",
        "description": "deletes available world tag and removes all its assignments",
        "operationId": "Tags_DeleteModuleTypeAvailableTag",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "tagId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "Tags"
        ]
      },
      "patch": {
        "summary": "Update module-available tag",
        "description": "updates module-assignable tag",
        "operationId": "Tags_UpdateModuleTypeAvailableTag",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbViewTag"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "tagId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "newTag": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "tags": [
          "Tags"
        ]
      }
    },
    "/tags/entity/{entityId}": {
      "post": {
        "summary": "Create entity tag",
        "description": "assigns one tag to the entity",
        "operationId": "Tags_CreateEntityTag",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbCreateEntityTagResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "entityId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "tagId": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        ],
        "tags": [
          "Tags"
        ]
      }
    },
    "/tags/entity/{entityId}/tag/{tagId}": {
      "delete": {
        "summary": "Delete entity tag",
        "description": "removes tag from the entity",
        "operationId": "Tags_DeleteEntityTag",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "entityId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "tagId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "Tags"
        ]
      }
    },
    "/tags/module/{moduleId}": {
      "post": {
        "summary": "Create module tag",
        "description": "assigns one tag to the module",
        "operationId": "Tags_CreateModuleTag",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbCreateModuleTagResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "moduleId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "tagId": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        ],
        "tags": [
          "Tags"
        ]
      }
    },
    "/tags/module/{moduleId}/tag/{tagId}": {
      "delete": {
        "summary": "Delete module tag",
        "description": "removes tag from the module",
        "operationId": "Tags_DeleteModuleTag",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "moduleId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "tagId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "Tags"
        ]
      }
    },
    "/user_roles": {
      "get": {
        "summary": "Get user roles (admin, moderator, etc.)",
        "description": "returns full list of user roles",
        "operationId": "Users_GetUserRoles",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbGetUserRolesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "userId",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "Users"
        ]
      }
    },
    "/users": {
      "get": {
        "summary": "Get list of users",
        "description": "returns list of users",
        "operationId": "Users_GetUsers",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbGetUsersResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "Users"
        ]
      },
      "post": {
        "summary": "Create new user",
        "description": "use this API to create a new user",
        "operationId": "Users_CreateUser",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbCreateUserResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/pbCreateUserRequest"
            }
          }
        ],
        "tags": [
          "Users"
        ]
      },
      "patch": {
        "summary": "Update user",
        "description": "use this API to update user",
        "operationId": "Users_UpdateUser",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbUpdateUserResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/pbUpdateUserRequest"
            }
          }
        ],
        "tags": [
          "Users"
        ]
      }
    },
    "/users/{userId}": {
      "get": {
        "summary": "Get user",
        "description": "returns information about one user",
        "operationId": "Users_GetUserById",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbUser"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "Users"
        ]
      }
    },
    "/users/{userId}/avatar": {
      "post": {
        "summary": "Upload user avatar",
        "description": "uploads an user avatar",
        "operationId": "Users_UploadUserAvatar",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbUploadUserAvatarResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "string",
                  "format": "byte"
                }
              }
            }
          }
        ],
        "tags": [
          "Users"
        ]
      }
    },
    "/users/{userId}/evaluation-vote": {
      "get": {
        "summary": "Get evaluation votes by user id",
        "description": "get evaluation votes by user id",
        "operationId": "Users_GetEvaluationVotesByUserId",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbGetEvaluationVotesByUserIdResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "Users"
        ]
      },
      "post": {
        "summary": "Create or update evaluation vote",
        "description": "create or update evaluation vote",
        "operationId": "Users_CreateOrUpdateEvaluationVote",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbCreateOrUpdateEvaluationVoteResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "evaluationId": {
                  "type": "integer",
                  "format": "int32"
                },
                "userIdVoter": {
                  "type": "integer",
                  "format": "int32"
                },
                "value": {
                  "type": "number",
                  "format": "double"
                }
              },
              "title": "Create or update evaluation"
            }
          }
        ],
        "tags": [
          "Users"
        ]
      }
    },
    "/users/{userId}/evaluation-vote/type/{type}/average": {
      "get": {
        "summary": "Get average user evaluation",
        "description": "get average user evaluation by type",
        "operationId": "Users_GetAverageUserEvaluationsByType",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbGetAverageUserEvaluationsByTypeResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "type",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Users"
        ]
      }
    },
    "/users/{userId}/evaluation-vote/voter/{userIdVoter}": {
      "get": {
        "summary": "Get evaluation votes by user id and voter",
        "description": "get evaluation votes by user id and voter",
        "operationId": "Users_GetEvaluationVotesByUserIdAndVoter",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbGetEvaluationVotesByUserIdAndVoterResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "userIdVoter",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "Users"
        ]
      }
    },
    "/users/{userId}/evaluation-vote/{evaluationId}/voter/{userIdVoter}": {
      "delete": {
        "summary": "Delete evaluation vote",
        "description": "delete evaluation vote",
        "operationId": "Users_DeleteEvaluationVote",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbDeleteEvaluationVoteResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "evaluationId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "userIdVoter",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "Users"
        ]
      }
    },
    "/users/{userId}/introduction": {
      "patch": {
        "summary": "Update user introduction",
        "description": "use this API to update user introduction",
        "operationId": "Users_UpdateUserIntroduction",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbPost"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "content": {
                  "type": "string"
                },
                "saveAsDraft": {
                  "type": "boolean"
                }
              }
            }
          }
        ],
        "tags": [
          "Users"
        ]
      }
    },
    "/users/{userId}/modules": {
      "get": {
        "summary": "Get creator's worlds",
        "description": "gets list of worlds that the creator is part of",
        "operationId": "Users_GetUserModules",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbGetUserModulesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "Users"
        ]
      }
    },
    "/users/{userId}/posts": {
      "get": {
        "summary": "Get user posts",
        "description": "get posts of user by userID",
        "operationId": "Users_GetUserPosts",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbGetUserPostsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "Users"
        ]
      }
    },
    "/users_roles": {
      "post": {
        "summary": "Add role to user",
        "description": "adds new role to user",
        "operationId": "Users_AddRoleToUser",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbAddRoleToUserResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/pbAddRoleToUserRequest"
            }
          }
        ],
        "tags": [
          "Users"
        ]
      }
    },
    "/users_roles/{userId}/roles/{roleId}": {
      "delete": {
        "summary": "Remove role from user",
        "description": "removes role from user",
        "operationId": "Users_RemoveRoleFromUser",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbRemoveRoleFromUserResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "roleId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "Users"
        ]
      }
    },
    "/worlds": {
      "get": {
        "summary": "Get worlds ",
        "description": "gets list of worlds",
        "operationId": "Worlds_GetWorlds",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbGetWorldsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "public",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "tags",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "orderBy",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "Worlds"
        ]
      },
      "post": {
        "summary": "Create world",
        "description": "creates completely new world",
        "operationId": "Worlds_CreateWorld",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbCreateWorldResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/pbCreateWorldRequest"
            }
          }
        ],
        "tags": [
          "Worlds"
        ]
      }
    },
    "/worlds/{worldId}": {
      "get": {
        "summary": "Get world by ID ",
        "description": "gets world by ID",
        "operationId": "Worlds_GetWorldById",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbWorld"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "worldId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "Worlds"
        ]
      },
      "patch": {
        "summary": "Update world",
        "description": "updates world properties (NO images or stats!)",
        "operationId": "Worlds_UpdateWorld",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbWorld"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "worldId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "shortDescription": {
                  "type": "string"
                },
                "public": {
                  "type": "boolean"
                },
                "basedOn": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "tags": [
          "Worlds"
        ]
      }
    },
    "/worlds/{worldId}/images": {
      "post": {
        "summary": "Upload image for world",
        "description": "uploads and sets new image for given world",
        "operationId": "Worlds_UploadWorldImage",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbImage"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "worldId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "string",
                  "format": "byte"
                },
                "imageTypeId": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        ],
        "tags": [
          "Worlds"
        ]
      }
    }
  },
  "definitions": {
    "pbAddRoleToUserRequest": {
      "type": "object",
      "properties": {
        "userId": {
          "type": "integer",
          "format": "int32"
        },
        "roleId": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "pbAddRoleToUserResponse": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "pbAverageEvaluationVote": {
      "type": "object",
      "properties": {
        "evaluationId": {
          "type": "integer",
          "format": "int32"
        },
        "userId": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "average": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "pbCharacter": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string"
        },
        "public": {
          "type": "boolean"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "shortDescription": {
          "type": "string"
        },
        "worldId": {
          "type": "integer",
          "format": "int32"
        },
        "systemId": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "pbCreateCharacterRequest": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "shortDescription": {
          "type": "string"
        },
        "worldId": {
          "type": "integer",
          "format": "int32"
        },
        "systemId": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "pbCreateCharacterResponse": {
      "type": "object",
      "properties": {
        "character": {
          "$ref": "#/definitions/pbCharacter"
        },
        "module": {
          "$ref": "#/definitions/pbViewModule"
        }
      }
    },
    "pbCreateEntityGroupRequest": {
      "type": "object",
      "properties": {
        "parentEntityGroupId": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "position": {
          "type": "integer",
          "format": "int32"
        },
        "style": {
          "$ref": "#/definitions/pbEntityGroupStyle"
        },
        "direction": {
          "$ref": "#/definitions/pbEntityGroupDirection"
        }
      }
    },
    "pbCreateEntityGroupResponse": {
      "type": "object",
      "properties": {
        "entityGroup": {
          "$ref": "#/definitions/pbEntityGroup"
        },
        "entityGroupContent": {
          "$ref": "#/definitions/pbEntityGroupContent"
        }
      }
    },
    "pbCreateEntityTagResponse": {
      "type": "object",
      "properties": {
        "entityId": {
          "type": "integer",
          "format": "int32"
        },
        "tagId": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "pbCreateLocationRequest": {
      "type": "object",
      "properties": {
        "moduleId": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "thumbnailImageId": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "pbCreateMapRequest": {
      "type": "object",
      "properties": {
        "moduleId": {
          "type": "integer",
          "format": "int32"
        },
        "title": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "thumbnailImageId": {
          "type": "integer",
          "format": "int32"
        },
        "isPrivate": {
          "type": "boolean"
        },
        "layerImageId": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "pbCreateMapResponse": {
      "type": "object",
      "properties": {
        "map": {
          "$ref": "#/definitions/pbMap"
        },
        "layer": {
          "$ref": "#/definitions/pbViewMapLayer"
        }
      }
    },
    "pbCreateModuleEntityAvailableTagRequest": {
      "type": "object",
      "properties": {
        "moduleId": {
          "type": "integer",
          "format": "int32"
        },
        "tag": {
          "type": "string"
        }
      }
    },
    "pbCreateModuleTagResponse": {
      "type": "object",
      "properties": {
        "moduleId": {
          "type": "integer",
          "format": "int32"
        },
        "tagId": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "pbCreateModuleTypeAvailableTagRequest": {
      "type": "object",
      "properties": {
        "moduleType": {
          "$ref": "#/definitions/pbModuleType"
        },
        "tag": {
          "type": "string"
        }
      }
    },
    "pbCreateOrUpdateEvaluationVoteResponse": {
      "type": "object",
      "properties": {
        "evaluationVote": {
          "$ref": "#/definitions/pbEvaluationVote"
        }
      }
    },
    "pbCreatePostRequest": {
      "type": "object",
      "properties": {
        "moduleId": {
          "type": "integer",
          "format": "int32"
        },
        "title": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "content": {
          "type": "string"
        },
        "isDraft": {
          "type": "boolean"
        },
        "isPrivate": {
          "type": "boolean"
        },
        "imageThumbnailId": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "pbCreateQuestRequest": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "shortDescription": {
          "type": "string"
        },
        "worldId": {
          "type": "integer",
          "format": "int32"
        },
        "systemId": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "pbCreateQuestResponse": {
      "type": "object",
      "properties": {
        "quest": {
          "$ref": "#/definitions/pbQuest"
        },
        "module": {
          "$ref": "#/definitions/pbViewModule"
        }
      }
    },
    "pbCreateSystemRequest": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "shortDescription": {
          "type": "string"
        },
        "basedOn": {
          "type": "string"
        }
      }
    },
    "pbCreateSystemResponse": {
      "type": "object",
      "properties": {
        "system": {
          "$ref": "#/definitions/pbSystem"
        },
        "module": {
          "$ref": "#/definitions/pbViewModule"
        }
      }
    },
    "pbCreateUserRequest": {
      "type": "object",
      "properties": {
        "username": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      }
    },
    "pbCreateUserResponse": {
      "type": "object",
      "properties": {
        "user": {
          "$ref": "#/definitions/pbUser"
        }
      }
    },
    "pbCreateWorldRequest": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "shortDescription": {
          "type": "string"
        },
        "basedOn": {
          "type": "string"
        }
      }
    },
    "pbCreateWorldResponse": {
      "type": "object",
      "properties": {
        "world": {
          "$ref": "#/definitions/pbWorld"
        },
        "module": {
          "$ref": "#/definitions/pbViewModule"
        }
      }
    },
    "pbDeleteEntityGroupContentAction": {
      "type": "string",
      "enum": [
        "DELETE_EGC_ACTION_UNKNOWN",
        "DELETE_EGC_ACTION_DELETE_CHILDREN",
        "DELETE_EGC_ACTION_MOVE_CHILDREN"
      ],
      "default": "DELETE_EGC_ACTION_UNKNOWN"
    },
    "pbDeleteEvaluationVoteResponse": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "pbDeletePostResponse": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "pbEntityGroup": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "style": {
          "$ref": "#/definitions/pbEntityGroupStyle"
        },
        "direction": {
          "$ref": "#/definitions/pbEntityGroupDirection"
        }
      }
    },
    "pbEntityGroupContent": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "entityGroupId": {
          "type": "integer",
          "format": "int32"
        },
        "position": {
          "type": "integer",
          "format": "int32"
        },
        "contentEntityId": {
          "type": "integer",
          "format": "int32"
        },
        "contentEntityGroupId": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "pbEntityGroupDirection": {
      "type": "string",
      "enum": [
        "ENTITY_GROUP_DIRECTION_UNKNOWN",
        "ENTITY_GROUP_DIRECTION_VERTICAL",
        "ENTITY_GROUP_DIRECTION_HORIZONTAL"
      ],
      "default": "ENTITY_GROUP_DIRECTION_UNKNOWN"
    },
    "pbEntityGroupStyle": {
      "type": "string",
      "enum": [
        "ENTITY_GROUP_STYLE_UNKNOWN",
        "ENTITY_GROUP_STYLE_FRAMED",
        "ENTITY_GROUP_STYLE_NOT_FRAMED"
      ],
      "default": "ENTITY_GROUP_STYLE_UNKNOWN"
    },
    "pbEntityTagAvailable": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "tag": {
          "type": "string"
        },
        "moduleId": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "pbEntityType": {
      "type": "string",
      "enum": [
        "ENTITY_TYPE_UNKNOWN",
        "ENTITY_TYPE_POST",
        "ENTITY_TYPE_MAP",
        "ENTITY_TYPE_LOCATION",
        "ENTITY_TYPE_CHARACTER",
        "ENTITY_TYPE_IMAGE"
      ],
      "default": "ENTITY_TYPE_UNKNOWN"
    },
    "pbEntityTypeList": {
      "type": "object",
      "properties": {
        "entityTypes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/pbEntityType"
          }
        }
      }
    },
    "pbEvaluation": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "type": {
          "$ref": "#/definitions/pbEvaluationType"
        }
      }
    },
    "pbEvaluationType": {
      "type": "string",
      "enum": [
        "self",
        "dm"
      ],
      "default": "self"
    },
    "pbEvaluationVote": {
      "type": "object",
      "properties": {
        "evaluationId": {
          "type": "integer",
          "format": "int32"
        },
        "userId": {
          "type": "integer",
          "format": "int32"
        },
        "userIdVoter": {
          "type": "integer",
          "format": "int32"
        },
        "value": {
          "type": "number",
          "format": "double"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "pbGetAverageUserEvaluationsByTypeResponse": {
      "type": "object",
      "properties": {
        "averageEvaluationVote": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/pbAverageEvaluationVote"
          }
        }
      }
    },
    "pbGetCharactersResponse": {
      "type": "object",
      "properties": {
        "characterIds": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        },
        "totalCount": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "pbGetEvaluationByIdResponse": {
      "type": "object",
      "properties": {
        "evaluation": {
          "$ref": "#/definitions/pbEvaluation"
        }
      }
    },
    "pbGetEvaluationVotesByUserIdAndVoterResponse": {
      "type": "object",
      "properties": {
        "evaluationVote": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/pbEvaluationVote"
          }
        }
      }
    },
    "pbGetEvaluationVotesByUserIdResponse": {
      "type": "object",
      "properties": {
        "evaluationVote": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/pbEvaluationVote"
          }
        }
      }
    },
    "pbGetEvaluationsByTypeResponse": {
      "type": "object",
      "properties": {
        "evaluation": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/pbEvaluation"
          }
        }
      }
    },
    "pbGetImagesResponse": {
      "type": "object",
      "properties": {
        "images": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/pbImage"
          }
        },
        "totalCount": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "pbGetLocationsResponse": {
      "type": "object",
      "properties": {
        "locations": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/pbLocation"
          }
        },
        "totalCount": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "pbGetMapLayersResponse": {
      "type": "object",
      "properties": {
        "layers": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/pbViewMapLayer"
          }
        }
      }
    },
    "pbGetMapPinsResponse": {
      "type": "object",
      "properties": {
        "pins": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/pbViewMapPin"
          }
        }
      }
    },
    "pbGetMapsResponse": {
      "type": "object",
      "properties": {
        "maps": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/pbMap"
          }
        },
        "totalCount": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "pbGetMenuItemContentResponse": {
      "type": "object",
      "properties": {
        "mainGroupId": {
          "type": "integer",
          "format": "int32"
        },
        "groups": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/pbEntityGroup"
          }
        },
        "contents": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/pbEntityGroupContent"
          }
        }
      }
    },
    "pbGetMenuItemsResponse": {
      "type": "object",
      "properties": {
        "menuItems": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/pbMenuItem"
          }
        }
      }
    },
    "pbGetModuleAdminsResponse": {
      "type": "object",
      "properties": {
        "moduleAdmins": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/pbModuleAdmin"
          }
        }
      }
    },
    "pbGetModuleEntityAvailableTagsResponse": {
      "type": "object",
      "properties": {
        "tags": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/pbTag"
          }
        }
      }
    },
    "pbGetModuleIdResponse": {
      "type": "object",
      "properties": {
        "moduleId": {
          "type": "integer",
          "format": "int32"
        },
        "moduleType": {
          "$ref": "#/definitions/pbModuleType"
        }
      }
    },
    "pbGetModuleMapPinTypesResponse": {
      "type": "object",
      "properties": {
        "pinTypes": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/pbMapPinType"
          }
        },
        "pinTypeGroups": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/pbMapPinTypeGroup"
          }
        }
      }
    },
    "pbGetModuleTypeAvailableTagsResponse": {
      "type": "object",
      "properties": {
        "tags": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/pbViewTag"
          }
        }
      }
    },
    "pbGetPostHistoryResponse": {
      "type": "object",
      "properties": {
        "historyPosts": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/pbPostHistory"
          }
        }
      }
    },
    "pbGetPostsResponse": {
      "type": "object",
      "properties": {
        "posts": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/pbPost"
          }
        },
        "totalCount": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "pbGetQuestCharactersResponse": {
      "type": "object",
      "properties": {
        "questCharacters": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/pbQuestCharacter"
          }
        }
      }
    },
    "pbGetQuestsResponse": {
      "type": "object",
      "properties": {
        "questIds": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        },
        "totalCount": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "pbGetSystemsResponse": {
      "type": "object",
      "properties": {
        "systemIds": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        },
        "totalCount": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "pbGetUserModulesResponse": {
      "type": "object",
      "properties": {
        "userModules": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/pbUserModule"
          }
        }
      }
    },
    "pbGetUserPostsResponse": {
      "type": "object",
      "properties": {
        "posts": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/pbViewPost"
          }
        }
      }
    },
    "pbGetUserRolesResponse": {
      "type": "object",
      "properties": {
        "role": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/pbRole"
          }
        }
      }
    },
    "pbGetUsersResponse": {
      "type": "object",
      "properties": {
        "users": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/pbUser"
          }
        }
      }
    },
    "pbGetWorldsResponse": {
      "type": "object",
      "properties": {
        "worldIds": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        },
        "totalCount": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "pbImage": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "imgGuid": {
          "type": "string"
        },
        "imageTypeId": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string"
        },
        "url": {
          "type": "string"
        },
        "baseUrl": {
          "type": "string"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "userId": {
          "type": "integer",
          "format": "int32"
        },
        "width": {
          "type": "integer",
          "format": "int32"
        },
        "height": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "pbLocation": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "postId": {
          "type": "integer",
          "format": "int32"
        },
        "thumbnailImageId": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "pbLoginUserRequest": {
      "type": "object",
      "properties": {
        "username": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      }
    },
    "pbLoginUserResponse": {
      "type": "object",
      "properties": {
        "user": {
          "$ref": "#/definitions/pbUser"
        },
        "sessionId": {
          "type": "string"
        },
        "accessTokenExpiresAt": {
          "type": "string",
          "format": "date-time"
        },
        "refreshTokenExpiresAt": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "pbMap": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "title": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "width": {
          "type": "integer",
          "format": "int32"
        },
        "height": {
          "type": "integer",
          "format": "int32"
        },
        "thumbnailImageId": {
          "type": "integer",
          "format": "int32"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "lastUpdatedAt": {
          "type": "string",
          "format": "date-time"
        },
        "lastUpdatedUserId": {
          "type": "integer",
          "format": "int32"
        },
        "isPrivate": {
          "type": "boolean"
        }
      }
    },
    "pbMapPinType": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "mapPinTypeGroupId": {
          "type": "integer",
          "format": "int32"
        },
        "shape": {
          "$ref": "#/definitions/pbPinShape"
        },
        "backgroundColor": {
          "type": "string"
        },
        "borderColor": {
          "type": "string"
        },
        "iconColor": {
          "type": "string"
        },
        "icon": {
          "type": "string"
        },
        "iconSize": {
          "type": "integer",
          "format": "int32"
        },
        "width": {
          "type": "integer",
          "format": "int32"
        },
        "isDefault": {
          "type": "boolean"
        }
      }
    },
    "pbMapPinTypeGroup": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "pbMenuItem": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "menuId": {
          "type": "integer",
          "format": "int32"
        },
        "code": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "position": {
          "type": "integer",
          "format": "int32"
        },
        "isMain": {
          "type": "boolean"
        },
        "descriptionPostId": {
          "type": "integer",
          "format": "int32"
        },
        "entityGroupId": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "pbModuleAdmin": {
      "type": "object",
      "properties": {
        "moduleId": {
          "type": "integer",
          "format": "int32"
        },
        "userId": {
          "type": "integer",
          "format": "int32"
        },
        "user": {
          "$ref": "#/definitions/pbUser"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "superAdmin": {
          "type": "boolean"
        },
        "approved": {
          "type": "integer",
          "format": "int32"
        },
        "motivationalLetter": {
          "type": "string"
        },
        "allowedEntityTypes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/pbEntityType"
          }
        },
        "allowedMenu": {
          "type": "boolean"
        }
      }
    },
    "pbModuleType": {
      "type": "string",
      "enum": [
        "MODULE_TYPE_UNKNOWN",
        "MODULE_TYPE_WORLD",
        "MODULE_TYPE_QUEST",
        "MODULE_TYPE_SYSTEM",
        "MODULE_TYPE_CHARACTER"
      ],
      "default": "MODULE_TYPE_UNKNOWN"
    },
    "pbPinShape": {
      "type": "string",
      "enum": [
        "NONE",
        "SQUARE",
        "TRIANGLE",
        "PIN",
        "CIRCLE",
        "HEXAGON",
        "OCTAGON",
        "STAR",
        "DIAMOND",
        "PENTAGON",
        "HEART",
        "CLOUD"
      ],
      "default": "NONE"
    },
    "pbPost": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "userId": {
          "type": "integer",
          "format": "int32"
        },
        "title": {
          "type": "string",
          "title": "field is sortable"
        },
        "content": {
          "type": "string"
        },
        "description": {
          "type": "string",
          "title": "field is sortable"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "title": "field is sortable"
        },
        "deletedAt": {
          "type": "string",
          "format": "date-time"
        },
        "lastUpdatedAt": {
          "type": "string",
          "format": "date-time",
          "title": "field is sortable"
        },
        "lastUpdatedUserId": {
          "type": "integer",
          "format": "int32"
        },
        "isDraft": {
          "type": "boolean"
        },
        "isPrivate": {
          "type": "boolean"
        },
        "imageThumbnailId": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "pbPostHistory": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "postId": {
          "type": "integer",
          "format": "int32"
        },
        "userId": {
          "type": "integer",
          "format": "int32"
        },
        "title": {
          "type": "string"
        },
        "content": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "deletedAt": {
          "type": "string",
          "format": "date-time"
        },
        "lastUpdatedAt": {
          "type": "string",
          "format": "date-time"
        },
        "lastUpdatedUserId": {
          "type": "integer",
          "format": "int32"
        },
        "isDraft": {
          "type": "boolean"
        },
        "isPrivate": {
          "type": "boolean"
        },
        "imageThumbnailId": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "pbQuest": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string"
        },
        "public": {
          "type": "boolean"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "shortDescription": {
          "type": "string"
        },
        "worldId": {
          "type": "integer",
          "format": "int32"
        },
        "systemId": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "pbQuestCharacter": {
      "type": "object",
      "properties": {
        "questId": {
          "type": "integer",
          "format": "int32"
        },
        "characterId": {
          "type": "integer",
          "format": "int32"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "approved": {
          "type": "integer",
          "format": "int32"
        },
        "motivationalLetter": {
          "type": "string"
        }
      }
    },
    "pbQuestStatus": {
      "type": "string",
      "enum": [
        "UNKNOWN",
        "NOT_STARTED",
        "IN_PROGRESS",
        "FINISHED_COMPLETED",
        "FINISHED_NOT_COMPLETED"
      ],
      "default": "UNKNOWN"
    },
    "pbRemoveRoleFromUserResponse": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "pbResetPasswordSendCodeRequest": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string"
        }
      }
    },
    "pbResetPasswordSendCodeResponse": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "pbResetPasswordVerifyCodeRequest": {
      "type": "object",
      "properties": {
        "secretCode": {
          "type": "string"
        },
        "newPassword": {
          "type": "string"
        }
      }
    },
    "pbResetPasswordVerifyCodeResponse": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "pbResetPasswordVerifyCodeValidityResponse": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "pbRole": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        }
      }
    },
    "pbRunFetcherRequest": {
      "type": "object",
      "properties": {
        "moduleIds": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        },
        "worldIds": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        },
        "systemIds": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        },
        "questIds": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        },
        "characterIds": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        },
        "entityIds": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        },
        "postIds": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        },
        "imageIds": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        },
        "locationIds": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        },
        "mapIds": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        },
        "userIds": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        }
      }
    },
    "pbRunFetcherResponse": {
      "type": "object",
      "properties": {
        "modules": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/pbViewModule"
          }
        },
        "worlds": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/pbWorld"
          }
        },
        "systems": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/pbSystem"
          }
        },
        "characters": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/pbCharacter"
          }
        },
        "quests": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/pbQuest"
          }
        },
        "entities": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/pbViewEntity"
          }
        },
        "posts": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/pbPost"
          }
        },
        "images": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/pbImage"
          }
        },
        "maps": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/pbMap"
          }
        },
        "locations": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/pbLocation"
          }
        },
        "users": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/pbUser"
          }
        }
      }
    },
    "pbSystem": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string"
        },
        "public": {
          "type": "boolean"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "basedOn": {
          "type": "string"
        },
        "shortDescription": {
          "type": "string"
        }
      }
    },
    "pbTag": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "tag": {
          "type": "string"
        }
      }
    },
    "pbUpdateMapPinTypeResponse": {
      "type": "object",
      "properties": {
        "pinType": {
          "$ref": "#/definitions/pbMapPinType"
        }
      }
    },
    "pbUpdateUserRequest": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "username": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "imgId": {
          "type": "integer",
          "format": "int32"
        },
        "introductionPostId": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "pbUpdateUserResponse": {
      "type": "object",
      "properties": {
        "user": {
          "$ref": "#/definitions/pbUser"
        }
      }
    },
    "pbUploadImageRequest": {
      "type": "object",
      "properties": {
        "filename": {
          "type": "string"
        },
        "data": {
          "type": "string",
          "format": "byte"
        },
        "imageTypeId": {
          "type": "integer",
          "format": "int32"
        },
        "width": {
          "type": "integer",
          "format": "int32"
        },
        "height": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "pbUploadUserAvatarResponse": {
      "type": "object",
      "properties": {
        "userId": {
          "type": "integer",
          "format": "int32"
        },
        "image": {
          "$ref": "#/definitions/pbImage"
        }
      }
    },
    "pbUser": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "username": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "imgId": {
          "type": "integer",
          "format": "int32"
        },
        "passwordChangedAt": {
          "type": "string",
          "format": "date-time"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "isEmailVerified": {
          "type": "boolean"
        },
        "introductionPostId": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "pbUserModule": {
      "type": "object",
      "properties": {
        "userId": {
          "type": "integer",
          "format": "int32"
        },
        "moduleId": {
          "type": "integer",
          "format": "int32"
        },
        "admin": {
          "type": "boolean"
        },
        "favorite": {
          "type": "boolean"
        },
        "following": {
          "type": "boolean"
        },
        "entityNotifications": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/pbEntityType"
          }
        }
      }
    },
    "pbVerifyEmailRequest": {
      "type": "object",
      "properties": {
        "emailId": {
          "type": "string",
          "format": "int64"
        },
        "secretCode": {
          "type": "string"
        }
      }
    },
    "pbVerifyEmailResponse": {
      "type": "object",
      "properties": {
        "isVerified": {
          "type": "boolean"
        }
      }
    },
    "pbViewEntity": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "type": {
          "$ref": "#/definitions/pbEntityType"
        },
        "postId": {
          "type": "integer",
          "format": "int32"
        },
        "mapId": {
          "type": "integer",
          "format": "int32"
        },
        "locationId": {
          "type": "integer",
          "format": "int32"
        },
        "imageId": {
          "type": "integer",
          "format": "int32"
        },
        "moduleId": {
          "type": "integer",
          "format": "int32"
        },
        "moduleType": {
          "$ref": "#/definitions/pbModuleType"
        },
        "moduleTypeId": {
          "type": "integer",
          "format": "int32"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        }
      }
    },
    "pbViewMapLayer": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string"
        },
        "mapId": {
          "type": "integer",
          "format": "int32"
        },
        "imageId": {
          "type": "integer",
          "format": "int32"
        },
        "imageUrl": {
          "type": "string"
        },
        "enabled": {
          "type": "boolean"
        },
        "position": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "pbViewMapPin": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string"
        },
        "mapId": {
          "type": "integer",
          "format": "int32"
        },
        "mapPinTypeId": {
          "type": "integer",
          "format": "int32"
        },
        "locationId": {
          "type": "integer",
          "format": "int32"
        },
        "mapLayerId": {
          "type": "integer",
          "format": "int32"
        },
        "x": {
          "type": "integer",
          "format": "int32"
        },
        "y": {
          "type": "integer",
          "format": "int32"
        },
        "locationName": {
          "type": "string"
        },
        "locationPostId": {
          "type": "integer",
          "format": "int32"
        },
        "locationDescription": {
          "type": "string"
        },
        "locationThumbnailImageId": {
          "type": "integer",
          "format": "int32"
        },
        "locationThumbnailImageUrl": {
          "type": "string"
        }
      }
    },
    "pbViewMenu": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "code": {
          "type": "string"
        },
        "headerImageId": {
          "type": "integer",
          "format": "int32"
        },
        "headerImageUrl": {
          "type": "string"
        }
      }
    },
    "pbViewModule": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "moduleType": {
          "$ref": "#/definitions/pbModuleType"
        },
        "worldId": {
          "type": "integer",
          "format": "int32"
        },
        "questId": {
          "type": "integer",
          "format": "int32"
        },
        "characterId": {
          "type": "integer",
          "format": "int32"
        },
        "systemId": {
          "type": "integer",
          "format": "int32"
        },
        "menuId": {
          "type": "integer",
          "format": "int32"
        },
        "headerImgId": {
          "type": "integer",
          "format": "int32"
        },
        "thumbnailImgId": {
          "type": "integer",
          "format": "int32"
        },
        "avatarImgId": {
          "type": "integer",
          "format": "int32"
        },
        "descriptionPostId": {
          "type": "integer",
          "format": "int32"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        }
      }
    },
    "pbViewPost": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "userId": {
          "type": "integer",
          "format": "int32"
        },
        "title": {
          "type": "string"
        },
        "content": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "deletedAt": {
          "type": "string",
          "format": "date-time"
        },
        "lastUpdatedAt": {
          "type": "string",
          "format": "date-time"
        },
        "lastUpdatedUserId": {
          "type": "integer",
          "format": "int32"
        },
        "isDraft": {
          "type": "boolean"
        },
        "isPrivate": {
          "type": "boolean"
        },
        "imageThumbnailId": {
          "type": "integer",
          "format": "int32"
        },
        "imageThumbnailUrl": {
          "type": "string"
        },
        "entityId": {
          "type": "integer",
          "format": "int32"
        },
        "moduleId": {
          "type": "integer",
          "format": "int32"
        },
        "moduleType": {
          "$ref": "#/definitions/pbModuleType"
        },
        "moduleTypeId": {
          "type": "integer",
          "format": "int32"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        }
      }
    },
    "pbViewTag": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "tag": {
          "type": "string"
        },
        "moduleType": {
          "$ref": "#/definitions/pbModuleType"
        },
        "count": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "pbWorld": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string"
        },
        "public": {
          "type": "boolean"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "basedOn": {
          "type": "string"
        },
        "shortDescription": {
          "type": "string"
        }
      }
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    }
  }
}

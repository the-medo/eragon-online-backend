-- SQL dump generated using DBML (dbml.dbdiagram.io)
-- Database: PostgreSQL
-- Generated at: 2024-11-17T18:13:49.753Z

CREATE TYPE "image_variant" AS ENUM (
  '100x100',
  '1200x800',
  '150x150',
  '1920x300',
  '200x200',
  '300x300',
  '30x30',
  'original',
  'public',
  '600x400',
  '400x600',
  '300x200',
  '200x300',
  '250x50'
);

CREATE TYPE "pin_shape" AS ENUM (
  'none',
  'square',
  'triangle',
  'pin',
  'circle',
  'hexagon',
  'octagon',
  'star',
  'diamond',
  'pentagon',
  'heart',
  'cloud'
);

CREATE TYPE "module_type" AS ENUM (
  'unknown',
  'world',
  'quest',
  'character',
  'system'
);

CREATE TYPE "entity_type" AS ENUM (
  'unknown',
  'post',
  'map',
  'location',
  'character',
  'image'
);

CREATE TYPE "delete_entity_group_content_action" AS ENUM (
  'unknown',
  'delete_children',
  'move_children'
);

CREATE TYPE "evaluation_type" AS ENUM (
  'self',
  'dm'
);

CREATE TYPE "quest_status" AS ENUM (
  'unknown',
  'not_started',
  'in_progress',
  'finished_completed',
  'finished_not_completed'
);

CREATE TABLE "image_types" (
  "id" int UNIQUE NOT NULL,
  "name" varchar UNIQUE NOT NULL,
  "description" text NOT NULL,
  "variant" image_variant NOT NULL
);

CREATE TABLE "images" (
  "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "user_id" int NOT NULL,
  "img_guid" uuid UNIQUE,
  "image_type_id" int,
  "name" varchar UNIQUE,
  "url" varchar NOT NULL,
  "base_url" varchar NOT NULL,
  "created_at" timestamptz NOT NULL DEFAULT (now()),
  "width" int NOT NULL DEFAULT 0,
  "height" int NOT NULL DEFAULT 0
);

CREATE TABLE "users" (
  "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "username" varchar UNIQUE NOT NULL,
  "hashed_password" varchar NOT NULL,
  "email" varchar UNIQUE NOT NULL,
  "img_id" int,
  "password_changed_at" timestamptz NOT NULL DEFAULT '0001-01-01 00:00:00Z',
  "created_at" timestamptz NOT NULL DEFAULT (now()),
  "is_email_verified" bool NOT NULL DEFAULT false,
  "introduction_post_id" int
);

CREATE TABLE "sessions" (
  "id" uuid PRIMARY KEY,
  "user_id" int NOT NULL,
  "username" varchar NOT NULL,
  "refresh_token" varchar NOT NULL,
  "user_agent" varchar NOT NULL,
  "client_ip" varchar NOT NULL,
  "is_blocked" boolean NOT NULL DEFAULT false,
  "created_at" timestamptz NOT NULL DEFAULT (now()),
  "expired_at" timestamptz NOT NULL DEFAULT (now() + INTERVAL '15 minutes')
);

CREATE TABLE "user_modules" (
  "user_id" int NOT NULL,
  "module_id" int NOT NULL,
  "admin" bool NOT NULL,
  "favorite" bool NOT NULL,
  "following" bool NOT NULL,
  "entity_notifications" entity_type[]
);

CREATE TABLE "evaluations" (
  "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "name" varchar NOT NULL,
  "description" varchar NOT NULL,
  "evaluation_type" evaluation_type NOT NULL
);

CREATE TABLE "evaluation_votes" (
  "evaluation_id" int NOT NULL,
  "user_id" int NOT NULL,
  "user_id_voter" int NOT NULL,
  "value" float NOT NULL,
  "created_at" timestamptz NOT NULL DEFAULT (now())
);

CREATE TABLE "user_password_reset" (
  "user_id" int NOT NULL,
  "code" varchar NOT NULL,
  "expired_at" timestamptz NOT NULL DEFAULT (now() + INTERVAL '15 minutes')
);

CREATE TABLE "verify_emails" (
  "id" bigserial PRIMARY KEY,
  "user_id" int NOT NULL,
  "email" varchar NOT NULL,
  "secret_code" varchar NOT NULL,
  "is_used" boolean NOT NULL DEFAULT false,
  "created_at" timestamptz NOT NULL DEFAULT (now()),
  "expired_at" timestamptz NOT NULL DEFAULT (now() + INTERVAL '15 minutes')
);

CREATE TABLE "roles" (
  "id" int UNIQUE NOT NULL,
  "name" varchar UNIQUE NOT NULL,
  "description" text NOT NULL
);

CREATE TABLE "user_roles" (
  "user_id" int NOT NULL,
  "role_id" int NOT NULL,
  "created_at" timestamptz NOT NULL DEFAULT (now())
);

CREATE TABLE "worlds" (
  "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "name" varchar UNIQUE NOT NULL,
  "based_on" varchar NOT NULL,
  "public" boolean NOT NULL DEFAULT false,
  "created_at" timestamptz NOT NULL DEFAULT (now()),
  "short_description" varchar NOT NULL DEFAULT ''
);

CREATE TABLE "module_admins" (
  "module_id" int NOT NULL,
  "user_id" int NOT NULL,
  "created_at" timestamptz NOT NULL DEFAULT (now()),
  "super_admin" boolean NOT NULL DEFAULT false,
  "approved" int NOT NULL,
  "motivational_letter" varchar NOT NULL,
  "allowed_entity_types" entity_type[],
  "allowed_menu" boolean NOT NULL DEFAULT false
);

CREATE TABLE "posts" (
  "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "user_id" int NOT NULL,
  "title" varchar NOT NULL,
  "description" varchar,
  "content" varchar NOT NULL,
  "created_at" timestamptz NOT NULL DEFAULT (now()),
  "deleted_at" timestamptz,
  "last_updated_at" timestamptz,
  "last_updated_user_id" int,
  "is_draft" bool NOT NULL,
  "is_private" bool NOT NULL,
  "thumbnail_img_id" int
);

CREATE TABLE "post_history" (
  "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "post_id" int NOT NULL,
  "user_id" int NOT NULL,
  "title" varchar NOT NULL,
  "description" varchar,
  "content" varchar NOT NULL,
  "created_at" timestamptz NOT NULL DEFAULT (now()),
  "deleted_at" timestamptz,
  "last_updated_at" timestamptz,
  "last_updated_user_id" int,
  "is_draft" bool NOT NULL,
  "is_private" bool NOT NULL,
  "thumbnail_img_id" int
);

CREATE TABLE "menus" (
  "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "menu_code" varchar UNIQUE NOT NULL,
  "menu_header_img_id" int
);

CREATE TABLE "menu_items" (
  "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "menu_id" int NOT NULL,
  "menu_item_code" varchar NOT NULL,
  "name" varchar NOT NULL,
  "position" int NOT NULL,
  "is_main" bool NOT NULL DEFAULT false,
  "description_post_id" int,
  "entity_group_id" int
);

CREATE TABLE "maps" (
  "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "user_id" int NOT NULL,
  "title" varchar NOT NULL,
  "type" varchar,
  "created_at" timestamptz NOT NULL DEFAULT (now()),
  "last_updated_at" timestamptz,
  "last_updated_user_id" int,
  "is_private" bool NOT NULL DEFAULT false,
  "description" varchar,
  "width" int NOT NULL,
  "height" int NOT NULL,
  "thumbnail_image_id" int
);

CREATE TABLE "locations" (
  "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "name" varchar NOT NULL,
  "description" varchar,
  "post_id" int,
  "thumbnail_image_id" int
);

CREATE TABLE "map_layers" (
  "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "name" varchar NOT NULL,
  "map_id" int NOT NULL,
  "image_id" int NOT NULL,
  "enabled" bool NOT NULL DEFAULT true,
  "position" int NOT NULL
);

CREATE TABLE "map_pins" (
  "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "name" varchar NOT NULL,
  "map_id" int NOT NULL,
  "map_pin_type_id" int,
  "location_id" int,
  "map_layer_id" int,
  "x" int NOT NULL,
  "y" int NOT NULL
);

CREATE TABLE "map_pin_type_group" (
  "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "name" varchar NOT NULL
);

CREATE TABLE "module_map_pin_type_groups" (
  "module_id" int NOT NULL,
  "map_pin_type_group_id" int NOT NULL
);

CREATE TABLE "map_pin_types" (
  "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "map_pin_type_group_id" int NOT NULL,
  "shape" pin_shape NOT NULL DEFAULT 'pin',
  "background_color" varchar,
  "border_color" varchar,
  "icon_color" varchar,
  "icon" varchar,
  "icon_size" int,
  "width" int,
  "is_default" bool NOT NULL DEFAULT false
);

CREATE TABLE "quests" (
  "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "name" varchar UNIQUE NOT NULL,
  "public" boolean NOT NULL DEFAULT false,
  "created_at" timestamptz NOT NULL DEFAULT (now()),
  "short_description" varchar NOT NULL DEFAULT '',
  "world_id" int,
  "system_id" int
);

CREATE TABLE "systems" (
  "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "name" varchar UNIQUE NOT NULL,
  "based_on" varchar NOT NULL,
  "public" boolean NOT NULL DEFAULT false,
  "created_at" timestamptz NOT NULL DEFAULT (now()),
  "short_description" varchar NOT NULL DEFAULT ''
);

CREATE TABLE "characters" (
  "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "name" varchar UNIQUE NOT NULL,
  "public" boolean NOT NULL DEFAULT false,
  "created_at" timestamptz NOT NULL DEFAULT (now()),
  "short_description" varchar NOT NULL DEFAULT '',
  "world_id" int,
  "system_id" int
);

CREATE TABLE "modules" (
  "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "module_type" module_type NOT NULL,
  "menu_id" int NOT NULL,
  "header_img_id" int,
  "thumbnail_img_id" int,
  "avatar_img_id" int,
  "world_id" int,
  "system_id" int,
  "character_id" int,
  "quest_id" int,
  "description_post_id" int NOT NULL
);

CREATE TABLE "module_type_tags_available" (
  "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "module_type" module_type NOT NULL,
  "tag" varchar NOT NULL
);

CREATE TABLE "module_tags" (
  "module_id" int NOT NULL,
  "tag_id" int NOT NULL
);

CREATE TABLE "module_entity_tags_available" (
  "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "module_id" int NOT NULL,
  "tag" varchar NOT NULL
);

CREATE TABLE "entity_tags" (
  "entity_id" int NOT NULL,
  "tag_id" int NOT NULL
);

CREATE TABLE "entities" (
  "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "module_id" int NOT NULL,
  "type" entity_type NOT NULL,
  "post_id" int,
  "map_id" int,
  "location_id" int,
  "image_id" int
);

CREATE TABLE "entity_groups" (
  "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "name" varchar,
  "description" varchar,
  "style" varchar DEFAULT 'framed',
  "direction" varchar DEFAULT 'vertical'
);

CREATE TABLE "entity_group_content" (
  "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "entity_group_id" int NOT NULL,
  "position" int NOT NULL,
  "content_entity_id" int,
  "content_entity_group_id" int
);

CREATE TABLE "quest_characters" (
  "quest_id" int NOT NULL,
  "character_id" int NOT NULL,
  "created_at" timestamptz NOT NULL DEFAULT (now()),
  "approved" int NOT NULL,
  "motivational_letter" varchar NOT NULL
);

CREATE TABLE "quest_settings" (
  "quest_id" int NOT NULL,
  "status" quest_status NOT NULL DEFAULT 'not_started',
  "can_join" boolean NOT NULL DEFAULT false
);

CREATE UNIQUE INDEX ON "user_modules" ("user_id", "module_id");

CREATE UNIQUE INDEX ON "evaluation_votes" ("evaluation_id", "user_id", "user_id_voter");

CREATE UNIQUE INDEX ON "user_roles" ("role_id", "user_id");

CREATE UNIQUE INDEX ON "module_admins" ("module_id", "user_id");

CREATE UNIQUE INDEX ON "module_map_pin_type_groups" ("module_id", "map_pin_type_group_id");

CREATE UNIQUE INDEX ON "module_type_tags_available" ("module_type", "tag");

CREATE UNIQUE INDEX ON "module_tags" ("module_id", "tag_id");

CREATE UNIQUE INDEX ON "module_entity_tags_available" ("module_id", "tag");

CREATE UNIQUE INDEX ON "entity_tags" ("entity_id", "tag_id");

CREATE INDEX ON "entities" ("type");

CREATE UNIQUE INDEX ON "entities" ("post_id", "module_id");

CREATE UNIQUE INDEX ON "entities" ("map_id", "module_id");

CREATE UNIQUE INDEX ON "entities" ("location_id", "module_id");

CREATE UNIQUE INDEX ON "entities" ("image_id", "module_id");

CREATE UNIQUE INDEX ON "quest_characters" ("quest_id", "character_id");

CREATE UNIQUE INDEX ON "quest_settings" ("quest_id");

COMMENT ON COLUMN "image_types"."variant" IS 'Variant name from cloudflare. ';

COMMENT ON COLUMN "module_admins"."approved" IS '0 = NO, 1 = YES, 2 = PENDING';

COMMENT ON COLUMN "map_layers"."position" IS 'Position 1 means main layer. Highest position = highest layer.';

COMMENT ON TABLE "modules" IS 'Groups higher-level sections into one table. Contains worlds, quests, characters and play systems.';

COMMENT ON TABLE "module_type_tags_available" IS 'Contains all tags, that are available for module TYPE - so, users can mark their worlds / quests / ... with these tags. These are NOT for marking entities.';

COMMENT ON TABLE "module_tags" IS 'Tag assignments for modules. So, if you are looking for what tags are assigned to a world, you can look here.';

COMMENT ON TABLE "module_entity_tags_available" IS 'Contains tags, that are possible to assign to ANY entity inside of a module. One module can only have one set of tags, that are usable for any entity type inside of that module.';

COMMENT ON TABLE "entity_tags" IS 'Assignments of module_entity_tags_available to entities';

COMMENT ON COLUMN "quest_characters"."approved" IS '0 = NO, 1 = YES, 2 = PENDING';

ALTER TABLE "images" ADD FOREIGN KEY ("user_id") REFERENCES "users" ("id");

ALTER TABLE "images" ADD FOREIGN KEY ("image_type_id") REFERENCES "image_types" ("id");

ALTER TABLE "users" ADD FOREIGN KEY ("img_id") REFERENCES "images" ("id");

ALTER TABLE "users" ADD FOREIGN KEY ("introduction_post_id") REFERENCES "posts" ("id");

ALTER TABLE "sessions" ADD FOREIGN KEY ("user_id") REFERENCES "users" ("id");

ALTER TABLE "user_modules" ADD FOREIGN KEY ("user_id") REFERENCES "users" ("id");

ALTER TABLE "user_modules" ADD FOREIGN KEY ("module_id") REFERENCES "modules" ("id");

ALTER TABLE "evaluation_votes" ADD FOREIGN KEY ("evaluation_id") REFERENCES "evaluations" ("id");

ALTER TABLE "evaluation_votes" ADD FOREIGN KEY ("user_id") REFERENCES "users" ("id");

ALTER TABLE "evaluation_votes" ADD FOREIGN KEY ("user_id_voter") REFERENCES "users" ("id");

ALTER TABLE "user_password_reset" ADD FOREIGN KEY ("user_id") REFERENCES "users" ("id");

ALTER TABLE "verify_emails" ADD FOREIGN KEY ("user_id") REFERENCES "users" ("id");

ALTER TABLE "user_roles" ADD FOREIGN KEY ("user_id") REFERENCES "users" ("id");

ALTER TABLE "user_roles" ADD FOREIGN KEY ("role_id") REFERENCES "roles" ("id");

ALTER TABLE "module_admins" ADD FOREIGN KEY ("module_id") REFERENCES "modules" ("id");

ALTER TABLE "module_admins" ADD FOREIGN KEY ("user_id") REFERENCES "users" ("id");

ALTER TABLE "posts" ADD FOREIGN KEY ("user_id") REFERENCES "users" ("id");

ALTER TABLE "posts" ADD FOREIGN KEY ("last_updated_user_id") REFERENCES "users" ("id");

ALTER TABLE "posts" ADD FOREIGN KEY ("thumbnail_img_id") REFERENCES "images" ("id");

ALTER TABLE "post_history" ADD FOREIGN KEY ("post_id") REFERENCES "posts" ("id");

ALTER TABLE "post_history" ADD FOREIGN KEY ("user_id") REFERENCES "users" ("id");

ALTER TABLE "post_history" ADD FOREIGN KEY ("last_updated_user_id") REFERENCES "users" ("id");

ALTER TABLE "post_history" ADD FOREIGN KEY ("thumbnail_img_id") REFERENCES "images" ("id");

ALTER TABLE "menus" ADD FOREIGN KEY ("menu_header_img_id") REFERENCES "images" ("id");

ALTER TABLE "menu_items" ADD FOREIGN KEY ("menu_id") REFERENCES "menus" ("id");

ALTER TABLE "menu_items" ADD FOREIGN KEY ("description_post_id") REFERENCES "posts" ("id");

ALTER TABLE "menu_items" ADD FOREIGN KEY ("entity_group_id") REFERENCES "entity_groups" ("id");

ALTER TABLE "maps" ADD FOREIGN KEY ("user_id") REFERENCES "users" ("id");

ALTER TABLE "maps" ADD FOREIGN KEY ("last_updated_user_id") REFERENCES "users" ("id");

ALTER TABLE "maps" ADD FOREIGN KEY ("thumbnail_image_id") REFERENCES "images" ("id");

ALTER TABLE "locations" ADD FOREIGN KEY ("post_id") REFERENCES "posts" ("id");

ALTER TABLE "locations" ADD FOREIGN KEY ("thumbnail_image_id") REFERENCES "images" ("id");

ALTER TABLE "map_layers" ADD FOREIGN KEY ("map_id") REFERENCES "maps" ("id");

ALTER TABLE "map_layers" ADD FOREIGN KEY ("image_id") REFERENCES "images" ("id");

ALTER TABLE "map_pins" ADD FOREIGN KEY ("map_id") REFERENCES "maps" ("id");

ALTER TABLE "map_pins" ADD FOREIGN KEY ("map_pin_type_id") REFERENCES "map_pin_types" ("id");

ALTER TABLE "map_pins" ADD FOREIGN KEY ("location_id") REFERENCES "locations" ("id");

ALTER TABLE "map_pins" ADD FOREIGN KEY ("map_layer_id") REFERENCES "map_layers" ("id");

ALTER TABLE "module_map_pin_type_groups" ADD FOREIGN KEY ("module_id") REFERENCES "modules" ("id");

ALTER TABLE "module_map_pin_type_groups" ADD FOREIGN KEY ("map_pin_type_group_id") REFERENCES "map_pin_type_group" ("id");

ALTER TABLE "map_pin_types" ADD FOREIGN KEY ("map_pin_type_group_id") REFERENCES "map_pin_type_group" ("id");

ALTER TABLE "quests" ADD FOREIGN KEY ("world_id") REFERENCES "worlds" ("id");

ALTER TABLE "quests" ADD FOREIGN KEY ("system_id") REFERENCES "systems" ("id");

ALTER TABLE "characters" ADD FOREIGN KEY ("world_id") REFERENCES "worlds" ("id");

ALTER TABLE "characters" ADD FOREIGN KEY ("system_id") REFERENCES "systems" ("id");

ALTER TABLE "modules" ADD FOREIGN KEY ("menu_id") REFERENCES "menus" ("id");

ALTER TABLE "modules" ADD FOREIGN KEY ("header_img_id") REFERENCES "images" ("id");

ALTER TABLE "modules" ADD FOREIGN KEY ("thumbnail_img_id") REFERENCES "images" ("id");

ALTER TABLE "modules" ADD FOREIGN KEY ("avatar_img_id") REFERENCES "images" ("id");

ALTER TABLE "modules" ADD FOREIGN KEY ("world_id") REFERENCES "worlds" ("id");

ALTER TABLE "modules" ADD FOREIGN KEY ("system_id") REFERENCES "systems" ("id");

ALTER TABLE "modules" ADD FOREIGN KEY ("character_id") REFERENCES "characters" ("id");

ALTER TABLE "modules" ADD FOREIGN KEY ("quest_id") REFERENCES "quests" ("id");

ALTER TABLE "modules" ADD FOREIGN KEY ("description_post_id") REFERENCES "posts" ("id");

ALTER TABLE "module_tags" ADD FOREIGN KEY ("module_id") REFERENCES "modules" ("id");

ALTER TABLE "module_tags" ADD FOREIGN KEY ("tag_id") REFERENCES "module_type_tags_available" ("id");

ALTER TABLE "module_entity_tags_available" ADD FOREIGN KEY ("module_id") REFERENCES "modules" ("id");

ALTER TABLE "entity_tags" ADD FOREIGN KEY ("entity_id") REFERENCES "entities" ("id");

ALTER TABLE "entity_tags" ADD FOREIGN KEY ("tag_id") REFERENCES "module_entity_tags_available" ("id");

ALTER TABLE "entities" ADD FOREIGN KEY ("module_id") REFERENCES "modules" ("id");

ALTER TABLE "entities" ADD FOREIGN KEY ("post_id") REFERENCES "posts" ("id");

ALTER TABLE "entities" ADD FOREIGN KEY ("map_id") REFERENCES "maps" ("id");

ALTER TABLE "entities" ADD FOREIGN KEY ("location_id") REFERENCES "locations" ("id");

ALTER TABLE "entities" ADD FOREIGN KEY ("image_id") REFERENCES "images" ("id");

ALTER TABLE "entity_group_content" ADD FOREIGN KEY ("entity_group_id") REFERENCES "entity_groups" ("id");

ALTER TABLE "entity_group_content" ADD FOREIGN KEY ("content_entity_id") REFERENCES "entities" ("id");

ALTER TABLE "entity_group_content" ADD FOREIGN KEY ("content_entity_group_id") REFERENCES "entity_groups" ("id");

ALTER TABLE "quest_characters" ADD FOREIGN KEY ("quest_id") REFERENCES "quests" ("id");

ALTER TABLE "quest_characters" ADD FOREIGN KEY ("character_id") REFERENCES "characters" ("id");

ALTER TABLE "quest_settings" ADD FOREIGN KEY ("quest_id") REFERENCES "quests" ("id");

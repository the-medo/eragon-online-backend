// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v4.22.0
// source: services/fetcher/rpc_fetcher.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type RunFetcherRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ModuleIds    []int32 `protobuf:"varint,1,rep,packed,name=moduleIds,proto3" json:"moduleIds,omitempty"`
	WorldIds     []int32 `protobuf:"varint,2,rep,packed,name=worldIds,proto3" json:"worldIds,omitempty"`
	SystemIds    []int32 `protobuf:"varint,3,rep,packed,name=systemIds,proto3" json:"systemIds,omitempty"`
	QuestIds     []int32 `protobuf:"varint,4,rep,packed,name=questIds,proto3" json:"questIds,omitempty"`
	CharacterIds []int32 `protobuf:"varint,5,rep,packed,name=characterIds,proto3" json:"characterIds,omitempty"`
	EntityIds    []int32 `protobuf:"varint,6,rep,packed,name=entityIds,proto3" json:"entityIds,omitempty"`
	PostIds      []int32 `protobuf:"varint,7,rep,packed,name=postIds,proto3" json:"postIds,omitempty"`
	ImageIds     []int32 `protobuf:"varint,8,rep,packed,name=imageIds,proto3" json:"imageIds,omitempty"`
	LocationIds  []int32 `protobuf:"varint,9,rep,packed,name=locationIds,proto3" json:"locationIds,omitempty"`
	MapIds       []int32 `protobuf:"varint,10,rep,packed,name=mapIds,proto3" json:"mapIds,omitempty"`
	UserIds      []int32 `protobuf:"varint,11,rep,packed,name=userIds,proto3" json:"userIds,omitempty"`
}

func (x *RunFetcherRequest) Reset() {
	*x = RunFetcherRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_fetcher_rpc_fetcher_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RunFetcherRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RunFetcherRequest) ProtoMessage() {}

func (x *RunFetcherRequest) ProtoReflect() protoreflect.Message {
	mi := &file_services_fetcher_rpc_fetcher_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RunFetcherRequest.ProtoReflect.Descriptor instead.
func (*RunFetcherRequest) Descriptor() ([]byte, []int) {
	return file_services_fetcher_rpc_fetcher_proto_rawDescGZIP(), []int{0}
}

func (x *RunFetcherRequest) GetModuleIds() []int32 {
	if x != nil {
		return x.ModuleIds
	}
	return nil
}

func (x *RunFetcherRequest) GetWorldIds() []int32 {
	if x != nil {
		return x.WorldIds
	}
	return nil
}

func (x *RunFetcherRequest) GetSystemIds() []int32 {
	if x != nil {
		return x.SystemIds
	}
	return nil
}

func (x *RunFetcherRequest) GetQuestIds() []int32 {
	if x != nil {
		return x.QuestIds
	}
	return nil
}

func (x *RunFetcherRequest) GetCharacterIds() []int32 {
	if x != nil {
		return x.CharacterIds
	}
	return nil
}

func (x *RunFetcherRequest) GetEntityIds() []int32 {
	if x != nil {
		return x.EntityIds
	}
	return nil
}

func (x *RunFetcherRequest) GetPostIds() []int32 {
	if x != nil {
		return x.PostIds
	}
	return nil
}

func (x *RunFetcherRequest) GetImageIds() []int32 {
	if x != nil {
		return x.ImageIds
	}
	return nil
}

func (x *RunFetcherRequest) GetLocationIds() []int32 {
	if x != nil {
		return x.LocationIds
	}
	return nil
}

func (x *RunFetcherRequest) GetMapIds() []int32 {
	if x != nil {
		return x.MapIds
	}
	return nil
}

func (x *RunFetcherRequest) GetUserIds() []int32 {
	if x != nil {
		return x.UserIds
	}
	return nil
}

type RunFetcherResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Modules    []*ViewModule `protobuf:"bytes,1,rep,name=modules,proto3" json:"modules,omitempty"`
	Worlds     []*World      `protobuf:"bytes,2,rep,name=worlds,proto3" json:"worlds,omitempty"`
	Systems    []*System     `protobuf:"bytes,3,rep,name=systems,proto3" json:"systems,omitempty"`
	Characters []*Character  `protobuf:"bytes,4,rep,name=characters,proto3" json:"characters,omitempty"`
	Quests     []*Quest      `protobuf:"bytes,5,rep,name=quests,proto3" json:"quests,omitempty"`
	Entities   []*ViewEntity `protobuf:"bytes,6,rep,name=entities,proto3" json:"entities,omitempty"`
	Posts      []*Post       `protobuf:"bytes,7,rep,name=posts,proto3" json:"posts,omitempty"`
	Images     []*Image      `protobuf:"bytes,8,rep,name=images,proto3" json:"images,omitempty"`
	Maps       []*Map        `protobuf:"bytes,9,rep,name=maps,proto3" json:"maps,omitempty"`
	Locations  []*Location   `protobuf:"bytes,10,rep,name=locations,proto3" json:"locations,omitempty"`
	Users      []*User       `protobuf:"bytes,11,rep,name=users,proto3" json:"users,omitempty"`
}

func (x *RunFetcherResponse) Reset() {
	*x = RunFetcherResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_fetcher_rpc_fetcher_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RunFetcherResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RunFetcherResponse) ProtoMessage() {}

func (x *RunFetcherResponse) ProtoReflect() protoreflect.Message {
	mi := &file_services_fetcher_rpc_fetcher_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RunFetcherResponse.ProtoReflect.Descriptor instead.
func (*RunFetcherResponse) Descriptor() ([]byte, []int) {
	return file_services_fetcher_rpc_fetcher_proto_rawDescGZIP(), []int{1}
}

func (x *RunFetcherResponse) GetModules() []*ViewModule {
	if x != nil {
		return x.Modules
	}
	return nil
}

func (x *RunFetcherResponse) GetWorlds() []*World {
	if x != nil {
		return x.Worlds
	}
	return nil
}

func (x *RunFetcherResponse) GetSystems() []*System {
	if x != nil {
		return x.Systems
	}
	return nil
}

func (x *RunFetcherResponse) GetCharacters() []*Character {
	if x != nil {
		return x.Characters
	}
	return nil
}

func (x *RunFetcherResponse) GetQuests() []*Quest {
	if x != nil {
		return x.Quests
	}
	return nil
}

func (x *RunFetcherResponse) GetEntities() []*ViewEntity {
	if x != nil {
		return x.Entities
	}
	return nil
}

func (x *RunFetcherResponse) GetPosts() []*Post {
	if x != nil {
		return x.Posts
	}
	return nil
}

func (x *RunFetcherResponse) GetImages() []*Image {
	if x != nil {
		return x.Images
	}
	return nil
}

func (x *RunFetcherResponse) GetMaps() []*Map {
	if x != nil {
		return x.Maps
	}
	return nil
}

func (x *RunFetcherResponse) GetLocations() []*Location {
	if x != nil {
		return x.Locations
	}
	return nil
}

func (x *RunFetcherResponse) GetUsers() []*User {
	if x != nil {
		return x.Users
	}
	return nil
}

var File_services_fetcher_rpc_fetcher_proto protoreflect.FileDescriptor

var file_services_fetcher_rpc_fetcher_proto_rawDesc = []byte{
	0x0a, 0x22, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2f, 0x66, 0x65, 0x74, 0x63, 0x68,
	0x65, 0x72, 0x2f, 0x72, 0x70, 0x63, 0x5f, 0x66, 0x65, 0x74, 0x63, 0x68, 0x65, 0x72, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x02, 0x70, 0x62, 0x1a, 0x1d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x2f, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x73, 0x2f, 0x6d, 0x6f, 0x64, 0x75, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x2f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x73, 0x2f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2f, 0x73,
	0x79, 0x73, 0x74, 0x65, 0x6d, 0x73, 0x2f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x23, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2f, 0x63, 0x68,
	0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x73, 0x2f, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74,
	0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x2f, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x2f, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2f,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x2f, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x19, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2f,
	0x70, 0x6f, 0x73, 0x74, 0x73, 0x2f, 0x70, 0x6f, 0x73, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x1b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2f, 0x69, 0x6d, 0x61, 0x67, 0x65,
	0x73, 0x2f, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2f, 0x6d, 0x61, 0x70, 0x73, 0x2f, 0x6d, 0x61, 0x70,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x21, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x2f, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x6c, 0x6f, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x19, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0xd3, 0x02, 0x0a, 0x11, 0x52, 0x75, 0x6e, 0x46, 0x65, 0x74, 0x63,
	0x68, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x6d, 0x6f,
	0x64, 0x75, 0x6c, 0x65, 0x49, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x05, 0x52, 0x09, 0x6d,
	0x6f, 0x64, 0x75, 0x6c, 0x65, 0x49, 0x64, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x77, 0x6f, 0x72, 0x6c,
	0x64, 0x49, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x05, 0x52, 0x08, 0x77, 0x6f, 0x72, 0x6c,
	0x64, 0x49, 0x64, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x49, 0x64,
	0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x05, 0x52, 0x09, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x49,
	0x64, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x73, 0x18, 0x04,
	0x20, 0x03, 0x28, 0x05, 0x52, 0x08, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x73, 0x12, 0x22,
	0x0a, 0x0c, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x49, 0x64, 0x73, 0x18, 0x05,
	0x20, 0x03, 0x28, 0x05, 0x52, 0x0c, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x49,
	0x64, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x64, 0x73, 0x18,
	0x06, 0x20, 0x03, 0x28, 0x05, 0x52, 0x09, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x64, 0x73,
	0x12, 0x18, 0x0a, 0x07, 0x70, 0x6f, 0x73, 0x74, 0x49, 0x64, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28,
	0x05, 0x52, 0x07, 0x70, 0x6f, 0x73, 0x74, 0x49, 0x64, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x6d,
	0x61, 0x67, 0x65, 0x49, 0x64, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x05, 0x52, 0x08, 0x69, 0x6d,
	0x61, 0x67, 0x65, 0x49, 0x64, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x64, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x05, 0x52, 0x0b, 0x6c, 0x6f, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x61, 0x70, 0x49,
	0x64, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x05, 0x52, 0x06, 0x6d, 0x61, 0x70, 0x49, 0x64, 0x73,
	0x12, 0x18, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x73, 0x18, 0x0b, 0x20, 0x03, 0x28,
	0x05, 0x52, 0x07, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x73, 0x22, 0xb1, 0x03, 0x0a, 0x12, 0x52,
	0x75, 0x6e, 0x46, 0x65, 0x74, 0x63, 0x68, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x28, 0x0a, 0x07, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x62, 0x2e, 0x56, 0x69, 0x65, 0x77, 0x4d, 0x6f, 0x64, 0x75,
	0x6c, 0x65, 0x52, 0x07, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x73, 0x12, 0x21, 0x0a, 0x06, 0x77,
	0x6f, 0x72, 0x6c, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x70, 0x62,
	0x2e, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x52, 0x06, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x73, 0x12, 0x24,
	0x0a, 0x07, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x0a, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x52, 0x07, 0x73, 0x79, 0x73,
	0x74, 0x65, 0x6d, 0x73, 0x12, 0x2d, 0x0a, 0x0a, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65,
	0x72, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x68,
	0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x52, 0x0a, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74,
	0x65, 0x72, 0x73, 0x12, 0x21, 0x0a, 0x06, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x18, 0x05, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x70, 0x62, 0x2e, 0x51, 0x75, 0x65, 0x73, 0x74, 0x52, 0x06,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x12, 0x2a, 0x0a, 0x08, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69,
	0x65, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x62, 0x2e, 0x56, 0x69,
	0x65, 0x77, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x08, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69,
	0x65, 0x73, 0x12, 0x1e, 0x0a, 0x05, 0x70, 0x6f, 0x73, 0x74, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x08, 0x2e, 0x70, 0x62, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x52, 0x05, 0x70, 0x6f, 0x73,
	0x74, 0x73, 0x12, 0x21, 0x0a, 0x06, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x18, 0x08, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x09, 0x2e, 0x70, 0x62, 0x2e, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x06, 0x69,
	0x6d, 0x61, 0x67, 0x65, 0x73, 0x12, 0x1b, 0x0a, 0x04, 0x6d, 0x61, 0x70, 0x73, 0x18, 0x09, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x07, 0x2e, 0x70, 0x62, 0x2e, 0x4d, 0x61, 0x70, 0x52, 0x04, 0x6d, 0x61,
	0x70, 0x73, 0x12, 0x2a, 0x0a, 0x09, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18,
	0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x70, 0x62, 0x2e, 0x4c, 0x6f, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x09, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1e,
	0x0a, 0x05, 0x75, 0x73, 0x65, 0x72, 0x73, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x08, 0x2e,
	0x70, 0x62, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x05, 0x75, 0x73, 0x65, 0x72, 0x73, 0x42, 0x2a,
	0x5a, 0x28, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x74, 0x68, 0x65,
	0x2d, 0x6d, 0x65, 0x64, 0x6f, 0x2f, 0x74, 0x61, 0x6c, 0x65, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x2d,
	0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_services_fetcher_rpc_fetcher_proto_rawDescOnce sync.Once
	file_services_fetcher_rpc_fetcher_proto_rawDescData = file_services_fetcher_rpc_fetcher_proto_rawDesc
)

func file_services_fetcher_rpc_fetcher_proto_rawDescGZIP() []byte {
	file_services_fetcher_rpc_fetcher_proto_rawDescOnce.Do(func() {
		file_services_fetcher_rpc_fetcher_proto_rawDescData = protoimpl.X.CompressGZIP(file_services_fetcher_rpc_fetcher_proto_rawDescData)
	})
	return file_services_fetcher_rpc_fetcher_proto_rawDescData
}

var file_services_fetcher_rpc_fetcher_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_services_fetcher_rpc_fetcher_proto_goTypes = []interface{}{
	(*RunFetcherRequest)(nil),  // 0: pb.RunFetcherRequest
	(*RunFetcherResponse)(nil), // 1: pb.RunFetcherResponse
	(*ViewModule)(nil),         // 2: pb.ViewModule
	(*World)(nil),              // 3: pb.World
	(*System)(nil),             // 4: pb.System
	(*Character)(nil),          // 5: pb.Character
	(*Quest)(nil),              // 6: pb.Quest
	(*ViewEntity)(nil),         // 7: pb.ViewEntity
	(*Post)(nil),               // 8: pb.Post
	(*Image)(nil),              // 9: pb.Image
	(*Map)(nil),                // 10: pb.Map
	(*Location)(nil),           // 11: pb.Location
	(*User)(nil),               // 12: pb.User
}
var file_services_fetcher_rpc_fetcher_proto_depIdxs = []int32{
	2,  // 0: pb.RunFetcherResponse.modules:type_name -> pb.ViewModule
	3,  // 1: pb.RunFetcherResponse.worlds:type_name -> pb.World
	4,  // 2: pb.RunFetcherResponse.systems:type_name -> pb.System
	5,  // 3: pb.RunFetcherResponse.characters:type_name -> pb.Character
	6,  // 4: pb.RunFetcherResponse.quests:type_name -> pb.Quest
	7,  // 5: pb.RunFetcherResponse.entities:type_name -> pb.ViewEntity
	8,  // 6: pb.RunFetcherResponse.posts:type_name -> pb.Post
	9,  // 7: pb.RunFetcherResponse.images:type_name -> pb.Image
	10, // 8: pb.RunFetcherResponse.maps:type_name -> pb.Map
	11, // 9: pb.RunFetcherResponse.locations:type_name -> pb.Location
	12, // 10: pb.RunFetcherResponse.users:type_name -> pb.User
	11, // [11:11] is the sub-list for method output_type
	11, // [11:11] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_services_fetcher_rpc_fetcher_proto_init() }
func file_services_fetcher_rpc_fetcher_proto_init() {
	if File_services_fetcher_rpc_fetcher_proto != nil {
		return
	}
	file_services_modules_module_proto_init()
	file_services_worlds_world_proto_init()
	file_services_systems_system_proto_init()
	file_services_characters_character_proto_init()
	file_services_quests_quest_proto_init()
	file_services_entities_entity_proto_init()
	file_services_posts_post_proto_init()
	file_services_images_image_proto_init()
	file_services_maps_map_proto_init()
	file_services_locations_location_proto_init()
	file_services_users_user_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_services_fetcher_rpc_fetcher_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RunFetcherRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_fetcher_rpc_fetcher_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RunFetcherResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_services_fetcher_rpc_fetcher_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_services_fetcher_rpc_fetcher_proto_goTypes,
		DependencyIndexes: file_services_fetcher_rpc_fetcher_proto_depIdxs,
		MessageInfos:      file_services_fetcher_rpc_fetcher_proto_msgTypes,
	}.Build()
	File_services_fetcher_rpc_fetcher_proto = out.File
	file_services_fetcher_rpc_fetcher_proto_rawDesc = nil
	file_services_fetcher_rpc_fetcher_proto_goTypes = nil
	file_services_fetcher_rpc_fetcher_proto_depIdxs = nil
}
